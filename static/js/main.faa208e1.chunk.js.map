{"version":3,"sources":["serviceWorker.ts","store/shapes/actions.ts","store/shapes/types.ts","components/DiagramContainer/Shapes/MaxPooling.tsx","components/DiagramContainer/Shapes/FullyConnected.tsx","components/DiagramContainer/Shapes/Flatten.tsx","components/DiagramContainer/Shapes/Convolutional.tsx","components/DiagramContainer/Shapes/Addition.tsx","components/DiagramContainer/Shapes/Concatenate.tsx","components/DiagramContainer/Shapes/Input.tsx","components/DiagramContainer/Shapes/Output.tsx","components/DiagramContainer/Shapes/Dropout.tsx","components/DiagramContainer/Shapes/BatchNormalization.tsx","interfaces/shapes.ts","utils/seedShapes.ts","components/ToolBar/index.tsx","store/mouse/actions.ts","store/mouse/types.ts","components/TemplatesModal/Template.tsx","utils/generateTemplate/resnet.ts","components/TemplatesModal/index.tsx","components/SideBar/index.tsx","utils/distance.ts","components/DiagramContainer/DraggableSVG.tsx","components/DiagramContainer/Arrows.tsx","components/DiagramContainer/index.tsx","components/DetailsBar/index.tsx","App.tsx","store/shapes/reducers.ts","store/mouse/reducers.ts","store/index.ts","index.tsx"],"names":["Boolean","window","location","hostname","match","setShapes","shapes","type","payload","editActiveShape","timestamp","meta","updateShapePositionAction","x","y","MaxPooling","id","height","width","OFFSET","strokeWidth","stroke","this","props","isMarked","fill","rx","React","centerPosition","WIDTH","HEIGHT","FullyConnected","Flatten","Convolutional","Addition","transform","points","Concatenate","Input","Output","Dropout","create","map","i","j","key","BatchNormalization","ShapeCenterPosition","constX","constY","layersMap","fc1","name","Date","getTime","shape","connectedTo","connectedToMe","fc2","fc3","fc4","fc5","concat","output","push","newInput","newOutput","seedInitShapes","seedNewShapes","ToolBar","state","isFullScreenEnabled","handleNewTemplate","toggleFullScreen","document","fullscreenElement","exitFullscreen","documentElement","requestFullscreen","setState","oldState","className","OverlayTrigger","overlay","Tooltip","placement","onClick","viewBox","d","connect","updateMouseLocation","Template","Card","bsPrefix","chooseTemplate","Body","title","Footer","desc","time","input","norm1","norm2","add","TemplatesModal","handleTemplate","temp","ResNet","onHide","Modal","size","aria-labelledby","centered","Header","closeButton","Title","CardDeck","Button","SideBar","modalShow","handleSetModal","pred","createShape","shapeName","layer","newObject","Math","random","addShape","toggleActive","getActiveShape","find","s","targetTimeStamp","sourceShape","Dropdown","Toggle","variant","style","marginBottom","Menu","Item","Divider","paddingLeft","ListGroup","defaultActiveKey","action","active","show","newShape","manhattanDistance","x1","y1","x2","y2","DraggableSVG","handlePointerDown","e","el","target","bbox","getBoundingClientRect","clientX","left","clientY","top","setPointerCapture","pointerId","currentMove","historyX","historyY","offset","handlePointerMove","newX","newY","currentShape","abs","handlePointerUp","filter","length","getSourceShape","getTargetShape","addArrowAndUpdateConnections","source","Arrows","targetShape","xMid","yMid","markerMid","DiagramContainer","isMouseInsideSVG","handleClick","event","currentTarget","handlePointerMovement","nativeEvent","offsetX","offsetY","handleRightClick","preventDefault","handleKeyDown","keyCode","handleMouseLeave","handleMouseEnter","onMouseMove","onContextMenu","onKeyDown","onMouseLeave","onMouseEnter","role","tabIndex","orient","refX","refY","markerWidth","markerHeight","mouse","xPointer","yPointer","DetailsBar","handleChangeName","editShapeName","value","handleChangePosition","axisToChange","handleDescriptionChange","updateShapeDescription","textAlign","Form","Group","controlId","Label","Control","placeholder","onChange","as","paddingRight","Row","Col","step","Accordion","description","eventKey","Collapse","rows","newName","App","initialState","rootReducer","combineReducers","undefined","currShape","store","middlewares","thunkMiddleware","middleWareEnhancer","applyMiddleware","createStore","composeWithDevTools","configureStore","ReactDOM","render","getElementById","navigator","serviceWorker","ready","then","registration","unregister","catch","error","console","message"],"mappings":"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","file":"static/js/main.faa208e1.chunk.js","sourcesContent":["// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\ntype Config = {\n  onSuccess?: (registration: ServiceWorkerRegistration) => void;\n  onUpdate?: (registration: ServiceWorkerRegistration) => void;\n};\n\nexport function register(config?: Config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(\n      process.env.PUBLIC_URL,\n      window.location.href\n    );\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl: string, config?: Config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl: string, config?: Config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' }\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import { \r\n\tShape,\r\n\tADD_SHAPE,\r\n\tSET_SHAPES,\r\n\tDELETE_SHAPE,\r\n\tEDIT_SHAPE_ACTIVATION,\r\n\tUPDATE_SHAPE_LOCATION,\r\n\tShapeActionTypes,\r\n\tADD_ARROW,\r\n\tUPDATE_SHAPE_ARROWS,\r\n\tEDIT_SHAPE_NAME,\r\n\tUPDATE_SHAPE_DESCRIPTION\r\n} from './types';\r\n\r\nexport function addShape(newShape: Shape) : ShapeActionTypes {\r\n\treturn {\r\n\t\ttype: ADD_SHAPE,\r\n\t\tpayload: newShape\r\n\t};\r\n}\r\n\r\nexport function setShapes(shapes: Shape[]) : ShapeActionTypes {\r\n\treturn {\r\n\t\ttype: SET_SHAPES,\r\n\t\tpayload: shapes\r\n\t};\r\n}\r\n\r\nexport function deleteShape(timestamp: number) : ShapeActionTypes {\r\n\treturn {\r\n\t\ttype: DELETE_SHAPE,\r\n\t\tmeta: {\r\n\t\t\ttimestamp\r\n\t\t}\r\n\t};\r\n}\r\n\r\nexport function editActiveShape(timestamp: number) : ShapeActionTypes {\r\n\treturn {\r\n\t\ttype: EDIT_SHAPE_ACTIVATION,\r\n\t\tmeta: {\r\n\t\t\ttimestamp: timestamp\r\n\t\t}\r\n\t};\r\n}\r\n\r\nexport function editShapeName(timestamp: number, name: string) : ShapeActionTypes {\r\n\treturn {\r\n\t\ttype: EDIT_SHAPE_NAME,\r\n\t\tpayload: {\r\n\t\t\ttimestamp: timestamp,\r\n\t\t\tnewName: name\r\n\t\t}\r\n\t};\r\n}\r\n\r\nexport function updateShapePositionAction(timestamp: number, x: number, y: number) : ShapeActionTypes {\r\n\treturn {\r\n\t\ttype: UPDATE_SHAPE_LOCATION,\r\n\t\tpayload: {\r\n\t\t\ttimestamp: timestamp,\r\n\t\t\tx: x,\r\n\t\t\ty: y\r\n\t\t}\r\n\t};\r\n}\r\n\r\nexport function updateShapeDescription(timestamp: number, desc: string) : ShapeActionTypes {\r\n\treturn {\r\n\t\ttype: UPDATE_SHAPE_DESCRIPTION,\r\n\t\tpayload: {\r\n\t\t\ttimestamp: timestamp,\r\n\t\t\tdesc: desc\r\n\t\t}\r\n\t};\r\n}\r\n\r\nexport function addArrowAndUpdateConnections(timestamp: number, source: Shape, target: Shape) : ShapeActionTypes {\r\n\treturn {\r\n\t\ttype: ADD_ARROW,\r\n\t\tpayload: {\r\n\t\t\ttimestamp: timestamp,\r\n\t\t\tsource: source,\r\n\t\t\ttarget: target\r\n\t\t}\r\n\t}\r\n}\r\n\r\nexport function updateShapeArrows(timestamp: number) : ShapeActionTypes {\r\n\treturn {\r\n\t\ttype: UPDATE_SHAPE_ARROWS,\r\n\t\tmeta: {\r\n\t\t\ttimestamp: timestamp\r\n\t\t}\r\n\t};\r\n}","import { LayerTypes } from \"../../interfaces/shapes\";\r\n\r\n// Describing the shape of the shapes's slice of state\r\nexport interface Shape {\r\n\tname: string;\r\n\ttimestamp: number;\r\n\tshape: LayerTypes;\r\n\tx: number;\r\n\ty: number;\r\n\tcenterPosition: number[]; // X and Y locations relative to the top left edge of the shape\r\n\tconnectedTo: Shape[]; // pointers to the real shapes\r\n\tconnectedToMe: Shape[]; // pointers to the real shapes\r\n\tdescription?: string;\r\n\t//active: boolean;\r\n}\r\n\r\n/*export interface Arrow {\r\n\ttimestamp: string; // concat of source.timestamp + \" \" + target.timestamp\r\n\tsource: Shape;\r\n\ttarget: Shape;\r\n}*/\r\n\r\nexport interface ShapeState {\r\n\tshapes: Shape[];\r\n\tsourceShape?: Shape;\r\n\t//arrows: Arrow[];\r\n}\r\n\r\n// Describing the different ACTION NAMES available\r\nexport const ADD_SHAPE = \"ADD_SHAPE\";\r\nexport const SET_SHAPES = \"SET_SHAPES\";\r\nexport const DELETE_SHAPE = \"DELETE_SHAPE\";\r\nexport const EDIT_SHAPE_ACTIVATION = \"EDIT_SHAPE_ACTIVATION\";\r\nexport const EDIT_SHAPE_NAME = \"EDIT_SHAPE_NAME\";\r\nexport const UPDATE_SHAPE_LOCATION = \"UPDATE_SHAPE_LOCATION\";\r\nexport const UPDATE_SHAPE_DESCRIPTION = \"UPDATE_SHAPE_DESCRIPTION\";\r\n\r\nexport const ADD_ARROW = \"ADD_ARROW\";\r\nexport const UPDATE_SHAPE_ARROWS = \"UPDATE_SHAPE_ARROWS\";\r\n\r\ninterface AddShapeAction {\r\n\ttype: typeof ADD_SHAPE;\r\n\tpayload: Shape;\r\n}\r\n\r\ninterface SetShapesAction {\r\n\ttype: typeof SET_SHAPES;\r\n\tpayload: Shape[];\r\n}\r\n\r\ninterface DeleteShapeAction {\r\n\ttype: typeof DELETE_SHAPE;\r\n\tmeta: {\r\n\t\ttimestamp: number;\r\n\t};\r\n}\r\n\r\ninterface EditShapeActivationAction {\r\n\ttype: typeof EDIT_SHAPE_ACTIVATION;\r\n\tmeta: {\r\n\t\ttimestamp: number;\r\n\t};\r\n}\r\n\r\ninterface EditShapeNameAction {\r\n\ttype: typeof EDIT_SHAPE_NAME;\r\n\tpayload: {\r\n\t\ttimestamp: number;\r\n\t\tnewName: string;\r\n\t};\r\n}\r\n\r\ninterface UpdateShapeDescriptionAction {\r\n\ttype: typeof UPDATE_SHAPE_DESCRIPTION;\r\n\tpayload: {\r\n\t\ttimestamp: number;\r\n\t\tdesc: string;\r\n\t}\r\n}\r\n\r\ninterface UpdateShapePositionAction {\r\n\ttype: typeof UPDATE_SHAPE_LOCATION;\r\n\tpayload: {\r\n\t\ttimestamp: number,\r\n\t\tx: number,\r\n\t\ty: number\r\n\t};\r\n}\r\n\r\ninterface AddArrowAction {\r\n\ttype: typeof ADD_ARROW;\r\n\tpayload: {\r\n\t\ttimestamp: number;\r\n\t\tsource: Shape;\r\n\t\ttarget: Shape;\r\n\t}\r\n}\r\n\r\ninterface UpdateShapeArrows {\r\n\ttype: typeof UPDATE_SHAPE_ARROWS;\r\n\tmeta: {\r\n\t\ttimestamp: number;\r\n\t}\r\n}\r\n\r\nexport type ShapeActionTypes =\r\n\tAddShapeAction |\r\n\tDeleteShapeAction |\r\n\tEditShapeActivationAction |\r\n\tUpdateShapePositionAction |\r\n\tAddArrowAction |\r\n\tUpdateShapeArrows |\r\n\tSetShapesAction |\r\n\tEditShapeNameAction |\r\n\tUpdateShapeDescriptionAction;","import * as React from 'react';\r\nimport { IDraggableShape } from \"../../../interfaces/shapes\";\r\n\r\n// Positioning\r\nconst WIDTH = 30;\r\nconst HEIGHT = 30;\r\nconst PADDING = 12;\r\nconst OFFSET = 2;\r\n\r\n// Styling Component\r\nconst BG1 = \"#ffb6b9\";\r\nconst BG2 = \"#fae3d9\";\r\nconst BG3 = \"#bbded6\";\r\nconst BORDER1 = \"#FF9A9E\";\r\nconst BORDER2 = \"#FFC7AF\";\r\nconst BORDER3 = \"#92DFCD\";\r\nconst BORDER_ACTIVE = \"red\";\r\n\r\nexport default class MaxPooling extends React.Component<IDraggableShape> {\r\n\t// I'll leave it 3/2 since this \"3\" should be variable in the future, it's\r\n\t// the number of boxes we display\r\n\tstatic centerPosition = [WIDTH / 2 + (PADDING) * 3 / 2, HEIGHT / 2 + (PADDING) * 3 / 2];\r\n\r\n\tpublic render() {\r\n\t\treturn (\r\n\t\t\t<React.Fragment>\r\n\t\t\t\t<title>Max Pooling Layer</title>\r\n\t\t\t\t\r\n\t\t\t\t<rect id=\"svg_1\" height={HEIGHT} width={WIDTH} y={OFFSET} x={OFFSET + PADDING} strokeWidth=\"1\" stroke={this.props.isMarked ? BORDER_ACTIVE : BORDER1} fill={BG1} rx=\"1\"></rect>\r\n\t\t\t\t<rect id=\"svg_2\" height={HEIGHT} width={WIDTH} y={OFFSET + PADDING} x={OFFSET + PADDING*2} strokeWidth=\"1\" stroke={this.props.isMarked ? BORDER_ACTIVE : BORDER2} fill={BG2} rx=\"1\"></rect>\r\n\t\t\t\t<rect id=\"svg_3\" height={HEIGHT} width={WIDTH} y={OFFSET + PADDING*2} x={OFFSET + PADDING*3} strokeWidth=\"1\" stroke={this.props.isMarked ? BORDER_ACTIVE : BORDER3} fill={BG3} rx=\"1\"></rect>\r\n\t\t\t</React.Fragment>\r\n\t\t);\r\n\t}\r\n}\r\n","import * as React from 'react';\r\nimport { IDraggableShape } from \"../../../interfaces/shapes\";\r\n\r\n// Positioning\r\nconst WIDTH = 30;\r\nconst HEIGHT = 90;\r\nconst OFFSET = 2;\r\n\r\n// Styling Component\r\nconst BG = \"#fcf7bb\";\r\nconst BORDER = \"#f6d186\";\r\n//const BORDER_ACTIVE = \"orange\";\r\nconst BORDER_ACTIVE = \"red\";\r\n\r\nexport default class FullyConnected extends React.Component<IDraggableShape> {\r\n\tstatic centerPosition = [WIDTH / 2, HEIGHT / 2];\r\n\t\r\n\tpublic render() {\r\n\t\treturn (\r\n\t\t\t<React.Fragment>\r\n\t\t\t\t<title>Fully Connected Layer</title>\r\n\t\t\t\t<rect id=\"svg_1\" height={HEIGHT} width={WIDTH} y={OFFSET} x={OFFSET} strokeWidth=\"1\" stroke={this.props.isMarked ? BORDER_ACTIVE : BORDER} fill={BG}></rect>\r\n\t\t\t</React.Fragment>\r\n\t\t);\r\n\t}\r\n}\r\n","import * as React from 'react';\r\nimport { IDraggableShape } from \"../../../interfaces/shapes\";\r\n\r\n// Positioning\r\nconst WIDTH = 20;\r\nconst HEIGHT = 150;\r\nconst OFFSET = 2;\r\n\r\n// Styling Component\r\nconst BG = \"#FFBCB7\";\r\nconst BORDER = \"#FF7E75\";\r\nconst BORDER_ACTIVE = \"#fd5e53\";\r\n\r\nexport default class Flatten extends React.Component<IDraggableShape> {\r\n\tstatic centerPosition = [WIDTH / 2, HEIGHT / 2];\r\n\t\r\n\tpublic render() {\r\n\t\treturn (\r\n\t\t\t<React.Fragment>\r\n\t\t\t\t<title>Flatten Layer</title>\r\n\t\t\t\t\r\n\t\t\t\t<rect id=\"svg_1\" height={HEIGHT} width={WIDTH} y={OFFSET} x={OFFSET} strokeWidth=\"1\" stroke={this.props.isMarked ? BORDER_ACTIVE : BORDER} fill={BG}></rect>\r\n\t\t\t</React.Fragment>\r\n\t\t);\r\n\t}\r\n}\r\n","import * as React from 'react';\r\nimport { IDraggableShape } from \"../../../interfaces/shapes\";\r\n\r\n\r\n// Positioning\r\nconst WIDTH = 30;\r\nconst HEIGHT = 30;\r\nconst PADDING = 5;\r\nconst OFFSET = 2;\r\n\r\n// Styling Component\r\nconst BG1 = \"#edffea\";\r\nconst BG2 = \"#75daad\";\r\nconst BORDER1 = \"#75daad\";\r\nconst BORDER2 = \"#75daad\";\r\nconst BORDER_ACTIVE = \"orange\";\r\n\r\nexport default class Convolutional extends React.Component<IDraggableShape> {\r\n\r\n\t// I'll leave it 4/2 since this \"4\" should be variable in the future, it's\r\n\t// the number of boxes we display\r\n\tstatic centerPosition = [WIDTH / 2 + (PADDING) * 4 / 2, HEIGHT / 2 + (PADDING) * 4 / 2];\r\n\r\n\tpublic render() {\r\n\t\t//console.log(\"Rect State\", this.props);\r\n\t\treturn (\r\n\t\t\t<React.Fragment>\r\n\t\t\t\t<title>Convolutional Layer</title>\r\n\t\t\t\t\r\n\t\t\t\t<rect id=\"svg_1\" height={HEIGHT} width={WIDTH} y={OFFSET} x={OFFSET + PADDING} strokeWidth=\"1\" stroke={this.props.isMarked ? BORDER_ACTIVE : BORDER1} fill={BG1}></rect>\r\n\t\t\t\t<rect id=\"svg_2\" height={HEIGHT} width={WIDTH} y={OFFSET + PADDING} x={OFFSET + PADDING*2} strokeWidth=\"1\" stroke={this.props.isMarked ? BORDER_ACTIVE : BORDER2} fill={BG2}></rect>\r\n\t\t\t\t<rect id=\"svg_3\" height={HEIGHT} width={WIDTH} y={OFFSET + PADDING*2} x={OFFSET + PADDING*3} strokeWidth=\"1\" stroke={this.props.isMarked ? BORDER_ACTIVE : BORDER1} fill={BG1}></rect>\r\n\t\t\t\t<rect id=\"svg_4\" height={HEIGHT} width={WIDTH} y={OFFSET + PADDING*3} x={OFFSET + PADDING*4} strokeWidth=\"1\" stroke={this.props.isMarked ? BORDER_ACTIVE : BORDER2} fill={BG2}></rect>\r\n\t\t\t</React.Fragment>\r\n\t\t);\r\n\t}\r\n}\r\n","import * as React from 'react';\r\nimport { IDraggableShape } from \"../../../interfaces/shapes\";\r\n\r\n// Positioning\r\nconst WIDTH = 50;\r\n//const PADDING = 12;\r\nconst OFFSET = 2;\r\n\r\n// Styling Component\r\nconst BG = \"#deffe9\";\r\nconst BORDER = \"#95e7b0\";\r\nconst BORDER_ACTIVE = \"red\";\r\n\r\nexport default class Addition extends React.Component<IDraggableShape> {\r\n\tstatic centerPosition = [WIDTH / 2, WIDTH / 2];\r\n\r\n\tpublic render() {\r\n\t\tconst transformSize = (2*WIDTH + 80 * 0.25) / 2 - 3;\r\n\t\treturn (\r\n\t\t\t<React.Fragment>\r\n\t\t\t\t<title>Addition Layer</title>\r\n\t\t\t\t<rect id=\"svg_1\" height={WIDTH} width={WIDTH} y={OFFSET} x={OFFSET} strokeWidth=\"1\" stroke={this.props.isMarked ? BORDER_ACTIVE : BORDER} fill={BG} rx={WIDTH / 2}></rect>\r\n\t\t\t\t<polygon\r\n\t\t\t\t\ttransform={`scale(0.25) translate(${transformSize},${transformSize})`}\r\n\t\t\t\t\tx={OFFSET + WIDTH / 2}\r\n\t\t\t\t\ty={OFFSET + WIDTH / 2}\r\n\t\t\t\t\tpoints=\"2 37, 37 37, 37 2, 67 2, 67 37, 102 37, 102 67, 67 67, 67 102, 37 102, 37 67, 2 67\"\r\n\t\t\t\t\tstroke={BORDER}\r\n\t\t\t\t\tfill={BORDER}\r\n\t\t\t\tstrokeWidth=\"2\"/>\r\n\r\n\t\t\t\t{/*<path d=\"m20,20 v0 h0 v20 a40,40 10 11,11 20,10Z\" x=\"0\" y=\"0\" fill=\"rgb(115, 166, 101)\"></path>\r\n\t\t\t\t<line x1=\"0\" y1=\"0\" x2=\"30\" y2=\"0\" strokeWidth=\"5\" stroke=\"rgb(0,68,0)\" />\r\n\t\t\t<line x1=\"5\" y1=\"0\" x2=\"5\" y2=\"30\" strokeWidth=\"5\" stroke=\"rgb(0,68,0)\" />*/}\r\n\t\t\t</React.Fragment>\r\n\t\t);\r\n\t}\r\n}\r\n","import * as React from 'react';\r\nimport { IDraggableShape } from \"../../../interfaces/shapes\";\r\n\r\n// Positioning\r\nconst WIDTH = 20;\r\nconst HEIGHT = 40;\r\nconst PADDING = 40;\r\nconst OFFSET = 2;\r\n\r\n// Styling Component\r\nconst BG1 = \"#f3e2f7\";\r\nconst BG2 = \"#f3e2f7\";\r\nconst BG3 = \"#f3e2f7\";\r\nconst BORDER1 = \"#b89acf\";\r\nconst BORDER2 = \"#b89acf\";\r\nconst BORDER3 = \"#b89acf\";\r\nconst BORDER_ACTIVE = \"red\";\r\n\r\nexport default class Concatenate extends React.Component<IDraggableShape> {\r\n\tstatic centerPosition = [WIDTH / 2, HEIGHT * 3 / 2];\r\n\r\n\tpublic render() {\r\n\t\treturn (\r\n\t\t\t<React.Fragment>\r\n\t\t\t\t<title>Concatenate Layer</title>\r\n\t\t\t\t\r\n\t\t\t\t<rect id=\"svg_1\" height={HEIGHT} width={WIDTH} y={OFFSET} x={OFFSET} strokeWidth=\"1\" stroke={this.props.isMarked ? BORDER_ACTIVE : BORDER1} fill={BG1}></rect>\r\n\t\t\t\t<rect id=\"svg_2\" height={HEIGHT} width={WIDTH} y={OFFSET + PADDING} x={OFFSET} strokeWidth=\"1\" stroke={this.props.isMarked ? BORDER_ACTIVE : BORDER2} fill={BG2}></rect>\r\n\t\t\t\t<rect id=\"svg_3\" height={HEIGHT} width={WIDTH} y={OFFSET + PADDING*2} x={OFFSET} strokeWidth=\"1\" stroke={this.props.isMarked ? BORDER_ACTIVE : BORDER3} fill={BG3}></rect>\r\n\t\t\t</React.Fragment>\r\n\t\t);\r\n\t}\r\n}\r\n","import * as React from 'react';\r\nimport { IDraggableShape } from \"../../../interfaces/shapes\";\r\n\r\n// Positioning\r\nconst WIDTH = 40;\r\nconst HEIGHT = 40;\r\nconst OFFSET = 2;\r\n\r\n// Styling Component\r\nconst BG = \"#f1f3f4\";\r\nconst BORDER = \"#79bac1\";\r\n//const BORDER_ACTIVE = \"orange\";\r\nconst BORDER_ACTIVE = \"red\";\r\n\r\nexport default class Input extends React.Component<IDraggableShape> {\r\n\tstatic centerPosition = [(WIDTH + OFFSET) / 2, (HEIGHT + OFFSET) / 2];\r\n\t\r\n\tpublic render() {\r\n\t\treturn (\r\n\t\t\t<React.Fragment>\r\n\t\t\t\t<title>Input Layer</title>\r\n\t\t\t\t<rect id=\"svg_1\" height={HEIGHT} width={WIDTH} y={OFFSET} x={OFFSET} strokeWidth=\"1\" stroke={this.props.isMarked ? BORDER_ACTIVE : BORDER} fill={BG}></rect>\r\n\t\t\t</React.Fragment>\r\n\t\t);\r\n\t}\r\n}\r\n","import * as React from 'react';\r\nimport { IDraggableShape } from \"../../../interfaces/shapes\";\r\n\r\n// Positioning\r\nconst WIDTH = 20;\r\nconst HEIGHT = 90;\r\nconst OFFSET = 2;\r\n\r\n// Styling Component\r\nconst BG = \"#eae7d9\";\r\nconst BORDER = \"#d2c6b2\";\r\n//const BORDER_ACTIVE = \"orange\";\r\nconst BORDER_ACTIVE = \"red\";\r\n\r\nexport default class Output extends React.Component<IDraggableShape> {\r\n\tstatic centerPosition = [WIDTH / 2, HEIGHT / 2];\r\n\t\r\n\tpublic render() {\r\n\t\treturn (\r\n\t\t\t<React.Fragment>\r\n\t\t\t\t<title>Output Layer</title>\r\n\t\t\t\t<rect id=\"svg_1\" height={HEIGHT} width={WIDTH} y={OFFSET} x={OFFSET} strokeWidth=\"1\" stroke={this.props.isMarked ? BORDER_ACTIVE : BORDER} fill={BG}></rect>\r\n\t\t\t</React.Fragment>\r\n\t\t);\r\n\t}\r\n}\r\n","import * as React from 'react';\r\nimport { IDraggableShape } from \"../../../interfaces/shapes\";\r\n\r\n// Positioning\r\nconst WIDTH = 12;\r\nconst HEIGHT = 12;\r\nconst OFFSET = 2;\r\n\r\n// Styling Component\r\nconst BG = \"#fdd998\";\r\nconst BORDER = \"#f5b971\";\r\n//const BORDER_ACTIVE = \"orange\";\r\nconst BORDER_ACTIVE = \"red\";\r\n\r\nexport default class Dropout extends React.Component<IDraggableShape> {\r\n\tstatic centerPosition = [WIDTH * 3 / 2, HEIGHT * 3 / 2];\r\n\t\r\n\tpublic render() {\r\n\t\tconst create = [0,1,2];\r\n\t\treturn (\r\n\t\t\t<React.Fragment>\r\n\t\t\t\t<title>Dropout Layer</title>\r\n\t\t\t\t{\r\n\t\t\t\t\tcreate.map(i => \r\n\t\t\t\t\t\tcreate.map(j => \r\n\t\t\t\t\t\t\t<rect\r\n\t\t\t\t\t\t\t\tkey={i + \",\" + j}\r\n\t\t\t\t\t\t\t\tid=\"svg_1\"\r\n\t\t\t\t\t\t\t\theight={HEIGHT}\r\n\t\t\t\t\t\t\t\twidth={WIDTH}\r\n\t\t\t\t\t\t\t\tx={OFFSET + WIDTH * i}\r\n\t\t\t\t\t\t\t\ty={OFFSET + HEIGHT * j}\r\n\t\t\t\t\t\t\t\tstrokeWidth=\"1\"\r\n\t\t\t\t\t\t\t\tstroke={this.props.isMarked ? BORDER_ACTIVE : BORDER}\r\n\t\t\t\t\t\t\t\tfill={BG}></rect>\r\n\t\t\t\t\t))\r\n\t\t\t\t}\r\n\t\t\t</React.Fragment>\r\n\t\t);\r\n\t}\r\n}\r\n","import * as React from 'react';\r\nimport { IDraggableShape } from \"../../../interfaces/shapes\";\r\n\r\n// Positioning\r\nconst WIDTH = 50;\r\nconst HEIGHT = 50;\r\nconst OFFSET = 4;\r\n\r\n// Styling Component\r\nconst BG = \"#ffecda\";\r\nconst BORDER = \"#d4a5a5\";\r\n//const BORDER_ACTIVE = \"orange\";\r\nconst BORDER_ACTIVE = \"red\";\r\n\r\nexport default class BatchNormalization extends React.Component<IDraggableShape> {\r\n\tstatic centerPosition = [WIDTH / 2, HEIGHT / 2];\r\n\t\r\n\tpublic render() {\r\n\t\treturn (\r\n\t\t\t<React.Fragment>\r\n\t\t\t\t<title>Batch Normalization Layer</title>\r\n\t\t\t\t<polygon\r\n\t\t\t\t\ttransform=\"scale(0.5)\"\r\n\t\t\t\t\tx={OFFSET}\r\n\t\t\t\t\ty={OFFSET}\r\n\t\t\t\t\tpoints=\"32,2 72,2, 102,32, 102,72, 72,102 32,102 2,72 2,32\"\r\n\t\t\t\t\tstroke={this.props.isMarked ? BORDER_ACTIVE : BORDER}\r\n\t\t\t\t\tfill={BG}\r\n\t\t\t\t\tstrokeWidth=\"3\"/>\r\n\r\n\t\t\t</React.Fragment>\r\n\t\t);\r\n\t}\r\n}\r\n","import MaxPooling from \"../components/DiagramContainer/Shapes/MaxPooling\";\r\nimport FullyConnected from \"../components/DiagramContainer/Shapes/FullyConnected\";\r\nimport Flatten from \"../components/DiagramContainer/Shapes/Flatten\";\r\nimport Convolutional from \"../components/DiagramContainer/Shapes/Convolutional\";\r\nimport Addition from \"../components/DiagramContainer/Shapes/Addition\";\r\nimport Concatenate from \"../components/DiagramContainer/Shapes/Concatenate\";\r\nimport Input from \"../components/DiagramContainer/Shapes/Input\";\r\nimport Output from \"../components/DiagramContainer/Shapes/Output\";\r\nimport Dropout from \"../components/DiagramContainer/Shapes/Dropout\";\r\nimport BatchNormalization from \"../components/DiagramContainer/Shapes/BatchNormalization\";\r\n\r\nexport interface IDraggableSVGState {\r\n\tisMarked: boolean;\r\n}\r\n\r\nexport interface IDraggable {\r\n\thandlePointerDown: (e : React.PointerEvent<EventTarget>) => void;\r\n\thandlePointerMove: (e : React.PointerEvent<EventTarget>) => void;\r\n\thandlePointerUp: () => void;\r\n\tactive: boolean;\r\n}\r\n\r\nexport interface IDraggableShape extends IDraggableSVGState {};\r\n\r\nexport abstract class ShapeCenterPosition {\r\n\tstatic constX : number;\r\n\tstatic constY : number;\r\n}\r\n\r\nexport type LayerTypes =\r\n\ttypeof MaxPooling |\r\n\ttypeof FullyConnected |\r\n\ttypeof Flatten |\r\n\ttypeof Convolutional |\r\n\ttypeof Concatenate |\r\n\ttypeof Addition |\r\n\ttypeof Input |\r\n\ttypeof Output |\r\n\ttypeof Dropout |\r\n\ttypeof BatchNormalization;\r\n\r\nexport const layersMap : Record<string, {create: () => LayerTypes, centerPosition: number[]}> = {\r\n\tMaxPooling: {\r\n\t\tcreate: () => MaxPooling,\r\n\t\tcenterPosition: MaxPooling.centerPosition\r\n\t},\r\n\tFullyConnected: {\r\n\t\tcreate: () => FullyConnected,\r\n\t\tcenterPosition: FullyConnected.centerPosition\r\n\t},\r\n\tFlatten: {\r\n\t\tcreate: () => Flatten,\r\n\t\tcenterPosition: Flatten.centerPosition\r\n\t},\r\n\tConvolutional: {\r\n\t\tcreate: () => Convolutional,\r\n\t\tcenterPosition: Convolutional.centerPosition\r\n\t},\r\n\tConcatenate: {\r\n\t\tcreate: () => Concatenate,\r\n\t\tcenterPosition: Concatenate.centerPosition\r\n\t},\r\n\tAddition: {\r\n\t\tcreate: () => Addition,\r\n\t\tcenterPosition: Addition.centerPosition\r\n\t},\r\n\tInput: {\r\n\t\tcreate: () => Input,\r\n\t\tcenterPosition: Input.centerPosition\r\n\t},\r\n\tOutput: {\r\n\t\tcreate: () => Output,\r\n\t\tcenterPosition: Output.centerPosition\r\n\t},\r\n\tDropout: {\r\n\t\tcreate: () => Dropout,\r\n\t\tcenterPosition: Dropout.centerPosition\r\n\t},\r\n\tBatchNormalization: {\r\n\t\tcreate: () => BatchNormalization,\r\n\t\tcenterPosition: BatchNormalization.centerPosition\r\n\t}\r\n}","import { Shape } from \"../store/shapes/types\";\r\nimport { layersMap } from '../interfaces/shapes';\r\n\r\nconst fc1 : Shape = {\r\n\tname: \"Input\",\r\n\ttimestamp: new Date().getTime() - 100,\r\n\tshape: layersMap.Input.create(),\r\n\tx: 83,\r\n\ty: 70,\r\n\tcenterPosition: layersMap.Input.centerPosition,\r\n\tconnectedTo: [],\r\n\tconnectedToMe: []\r\n};\r\n\r\nconst fc2 : Shape = {\r\n\tname: \"FullyConnected\",\r\n\ttimestamp: new Date().getTime() - 200,\r\n\tshape: layersMap.FullyConnected.create(),\r\n\tx: 83,\r\n\ty: 230,\r\n\tcenterPosition: layersMap.FullyConnected.centerPosition,\r\n\tconnectedTo: [],\r\n\tconnectedToMe: []\r\n};\r\n\r\nconst fc3 : Shape = {\r\n\tname: \"FullyConnected\",\r\n\ttimestamp: new Date().getTime() - 300,\r\n\tshape: layersMap.FullyConnected.create(),\r\n\tx: 203,\r\n\ty: 70,\r\n\tcenterPosition: layersMap.FullyConnected.centerPosition,\r\n\tconnectedTo: [],\r\n\tconnectedToMe: []\r\n};\r\n\r\nconst fc4 : Shape = {\r\n\tname: \"FullyConnected\",\r\n\ttimestamp: new Date().getTime() - 400,\r\n\tshape: layersMap.FullyConnected.create(),\r\n\tx: 203,\r\n\ty: 230,\r\n\tcenterPosition: layersMap.FullyConnected.centerPosition,\r\n\tconnectedTo: [],\r\n\tconnectedToMe: []\r\n}\r\n\r\nconst fc5 : Shape = {\r\n\tname: \"FullyConnected\",\r\n\ttimestamp: new Date().getTime() - 500,\r\n\tshape: layersMap.FullyConnected.create(),\r\n\tx: 443,\r\n\ty: 155,\r\n\tcenterPosition: layersMap.FullyConnected.centerPosition,\r\n\tconnectedTo: [],\r\n\tconnectedToMe: []\r\n}\r\n\r\nconst concat : Shape = {\r\n\tname: \"Concatenate\",\r\n\ttimestamp: new Date().getTime() - 600,\r\n\tshape: layersMap.Concatenate.create(),\r\n\tx: 328,\r\n\ty: 140,\r\n\tcenterPosition: layersMap.Concatenate.centerPosition,\r\n\tconnectedTo: [],\r\n\tconnectedToMe: []\r\n}\r\n\r\nconst output : Shape = {\r\n\tname: \"Output\",\r\n\ttimestamp: new Date().getTime() - 700,\r\n\tshape: layersMap.Output.create(),\r\n\tx: 543,\r\n\ty: 155,\r\n\tcenterPosition: layersMap.Output.centerPosition,\r\n\tconnectedTo: [],\r\n\tconnectedToMe: []\r\n}\r\n\r\n// Make connections between the shapes\r\nfc1.connectedTo.push(fc3);\r\nfc3.connectedToMe.push(fc1);\r\n\r\nfc2.connectedTo.push(fc4);\r\nfc4.connectedToMe.push(fc2);\r\n\r\nfc3.connectedTo.push(concat);\r\nfc4.connectedTo.push(concat);\r\n\r\nconcat.connectedToMe.push(fc3, fc4);\r\n\r\nconcat.connectedTo.push(fc5);\r\nfc3.connectedToMe.push(concat);\r\n\r\nfc5.connectedTo.push(output);\r\noutput.connectedToMe.push(fc5);\r\n\r\nconst newInput: Shape = {\r\n\tname: \"Input\",\r\n\ttimestamp: new Date().getTime() - 1000,\r\n\tshape: layersMap.Input.create(),\r\n\tx: 57,\r\n\ty: 180,\r\n\tcenterPosition: layersMap.Input.centerPosition,\r\n\tconnectedTo: [],\r\n\tconnectedToMe: []\r\n};\r\n\r\nconst newOutput: Shape = {\r\n\tname: \"Output\",\r\n\ttimestamp: new Date().getTime() - 1100,\r\n\tshape: layersMap.Output.create(),\r\n\tx: 587,\r\n\ty: 155,\r\n\tcenterPosition: layersMap.Output.centerPosition,\r\n\tconnectedTo: [],\r\n\tconnectedToMe: []\r\n};\r\n\r\nexport const seedInitShapes : Shape[] = [fc1, fc2, fc3, fc4, concat, fc5, output];\r\nexport const seedNewShapes : Shape[] = [newInput, newOutput];","import * as React from 'react';\r\nimport \"./toolbar.scss\";\r\nimport { connect } from 'react-redux';\r\nimport { AppState } from '../../store';\r\nimport { setShapes } from '../../store/shapes/actions';\r\nimport { ShapeState } from '../../store/shapes/types';\r\nimport { seedNewShapes } from '../../utils/seedShapes';\r\nimport OverlayTrigger from 'react-bootstrap/OverlayTrigger';\r\nimport Tooltip from 'react-bootstrap/Tooltip';\r\n\r\n\r\nexport interface IToolBarProps {\r\n\tshapes: ShapeState;\r\n\tsetShapes: typeof setShapes;\r\n}\r\n\r\nexport interface IToolBarState {\r\n\tisFullScreenEnabled: boolean\r\n}\r\n\r\nclass ToolBar extends React.Component<IToolBarProps, IToolBarState> {\r\n\tstate = {\r\n\t\tisFullScreenEnabled: false\r\n\t}\r\n\r\n\thandleNewTemplate = () => {\r\n\t\tthis.props.setShapes(seedNewShapes);\r\n\t}\r\n\r\n\ttoggleFullScreen = () => {\r\n\t\tif (!document.fullscreenElement) {\r\n\t\t\tdocument.documentElement.requestFullscreen();\r\n\t\t} else {\r\n\t\t\tif (document.exitFullscreen) {\r\n\t\t\t\tdocument.exitFullscreen(); \r\n\t\t\t}\r\n\t\t}\r\n\r\n\t\tthis.setState((oldState) => ({\r\n\t\t\tisFullScreenEnabled: !oldState.isFullScreenEnabled\r\n\t\t}));\r\n\t}\r\n\r\n\tpublic render() {\r\n\t\treturn (\r\n\t\t\t<div className=\"toolbar\">\r\n\t\t\t\t<div className=\"left-side\">\r\n\t\t\t\t\t<OverlayTrigger\r\n\t\t\t\t\t\toverlay={<Tooltip id=\"tooltip-new-template\">Start new template</Tooltip>}\r\n\t\t\t\t\t\tplacement=\"bottom\"\r\n\t\t\t\t\t>\r\n\t\t\t\t\t\t<button onClick={this.handleNewTemplate}>\r\n\t\t\t\t\t\t\t<svg viewBox=\"5 5 15 15\" fill=\"currentColor\" width=\"9\" height=\"15\"><path d=\"M13,6.70710678 L13,9 L15.2928932,9 L13,6.70710678 Z M17,19 C17,19.5522847 16.5522847,20 16,20 L7,20 C6.44771525,20 6,19.5522847 6,19 L6,6 C6,5.44771525 6.44771525,5 7,5 L12.7099045,5 L17,9.2995551 L17,19 Z M16,10 L12,10 L12,6 L7,6 L7,19 L16,19 L16,10 Z\"></path></svg>\r\n\t\t\t\t\t\t</button>\r\n\t\t\t\t\t</OverlayTrigger>\r\n\r\n\t\t\t\t\t<button>\r\n\t\t\t\t\t\t<svg viewBox=\"4 5 15 15\" fill=\"currentColor\" width=\"9\" height=\"15\"><path d=\"M16.679,5.60187506 L18.381,7.30587506 C19.207,8.13287506 19.207,9.47787506 18.381,10.3058751 L10.211,18.4858751 L4,19.9998751 L5.512,13.7818751 L13.682,5.60187506 C14.481,4.79987506 15.878,4.79887506 16.679,5.60187506 Z M8.66091072,16.0462125 L9.973,17.3598751 L15.625,11.7018751 L12.289,8.36087506 L6.637,14.0198751 L7.95422762,15.3386821 L11.1467061,12.1463747 C11.3419735,11.9511178 11.6585559,11.9511262 11.8538129,12.1463936 C12.0490698,12.341661 12.0490613,12.6582435 11.8537939,12.8535004 L8.66091072,16.0462125 Z M16.306,11.0198751 L17.7,9.62387506 C18.15,9.17287506 18.15,8.43787506 17.7,7.98687506 L15.998,6.28287506 C15.561,5.84587506 14.801,5.84687506 14.364,6.28287506 L12.97,7.67887506 L16.306,11.0198751 Z M5.426,18.5738751 L8.995,17.7438751 L6.254,14.9988751 L5.426,18.5738751 Z\"></path></svg>\r\n\t\t\t\t\t</button>\r\n\r\n\t\t\t\t\t<button>\r\n\t\t\t\t\t\t<svg viewBox=\"4 4 15 15\" fill=\"currentColor\" width=\"9\" height=\"15\"><path d=\"M5,13 L5,17 C5,17.5522847 5.44771525,18 6,18 L17,18 C17.5522847,18 18,17.5522847 18,17 L18,13 L19,13 L19,17 C19,18.1045695 18.1045695,19 17,19 L6,19 C4.8954305,19 4,18.1045695 4,17 L4,13 L5,13 Z M11,13.2928932 L11,5 L12,5 L12,13.2928932 L14.1464466,11.1464466 C14.3417088,10.9511845 14.6582912,10.9511845 14.8535534,11.1464466 C15.0488155,11.3417088 15.0488155,11.6582912 14.8535534,11.8535534 L11.5,15.2071068 L8.14644661,11.8535534 C7.95118446,11.6582912 7.95118446,11.3417088 8.14644661,11.1464466 C8.34170876,10.9511845 8.65829124,10.9511845 8.85355339,11.1464466 L11,13.2928932 Z\"></path></svg>\r\n\t\t\t\t\t</button>\r\n\t\t\t\t</div>\r\n\r\n\t\t\t\t<div className=\"right-side\">\r\n\t\t\t\t\t<OverlayTrigger\r\n\t\t\t\t\t\toverlay={<Tooltip id=\"tooltip-toggle-fullscreen\">Toggle Fullscreen Mode</Tooltip>}\r\n\t\t\t\t\t\tplacement=\"bottom\"\r\n\t\t\t\t\t>\r\n\t\t\t\t\t\t<button onClick={this.toggleFullScreen}>\r\n\t\t\t\t\t\t\t{!this.state.isFullScreenEnabled ? \r\n\t\t\t\t\t\t\t<svg viewBox=\"0 0 1024 1024\"><path d=\"M959.688 920.068l0.31-176c0.040-22.094-17.84-40.032-39.93-40.070-22.092-0.040-40.032 17.838-40.070 39.93l-0.142 79.672-235.734-235.732c-15.622-15.622-40.948-15.622-56.57 0s-15.622 40.948 0 56.568l235.442 235.442-78.946-0.1c-22.092-0.028-40.022 17.86-40.050 39.952-0.014 11.064 4.464 21.084 11.714 28.334 7.228 7.224 17.208 11.702 28.236 11.714l175.688 0.22c22.086 0.028 40.014-17.846 40.052-39.93zM920.178 64.228l-176-0.308c-22.094-0.040-40.032 17.84-40.070 39.93-0.040 22.092 17.838 40.032 39.93 40.070l79.672 0.14-235.732 235.734c-15.622 15.622-15.622 40.948 0 56.568s40.948 15.622 56.568 0l235.442-235.442-0.1 78.946c-0.028 22.092 17.86 40.022 39.952 40.050 11.064 0.014 21.084-4.464 28.334-11.714 7.224-7.228 11.702-17.208 11.714-28.236l0.22-175.688c0.026-22.082-17.846-40.010-39.93-40.050zM64.236 103.742l-0.308 176c-0.040 22.094 17.84 40.032 39.93 40.070 22.092 0.040 40.032-17.84 40.070-39.93l0.14-79.672 235.734 235.73c15.622 15.622 40.948 15.622 56.568 0s15.622-40.946 0-56.566l-235.442-235.442 78.946 0.098c22.092 0.028 40.022-17.86 40.050-39.95 0.014-11.066-4.464-21.086-11.714-28.336-7.228-7.222-17.208-11.7-28.236-11.714l-175.688-0.218c-22.084-0.026-40.012 17.844-40.050 39.93zM103.748 959.766l176 0.308c22.094 0.040 40.032-17.84 40.070-39.93 0.040-22.092-17.84-40.032-39.93-40.070l-79.672-0.14 235.73-235.734c15.622-15.622 15.622-40.948 0-56.568s-40.946-15.622-56.566 0l-235.442 235.442 0.098-78.946c0.028-22.092-17.86-40.022-39.95-40.050-11.066-0.014-21.086 4.464-28.336 11.714-7.222 7.228-11.7 17.208-11.714 28.236l-0.218 175.688c-0.026 22.082 17.844 40.010 39.93 40.050z\"></path></svg>\r\n\t\t\t\t\t\t\t:\r\n\t\t\t\t\t\t\t<svg viewBox=\"5 4 15 15\" fill=\"currentColor\" width=\"9\" height=\"13\" className=\"active_button\"><path d=\"M10.9393398,12 L6,7.06066017 C5.70710678,6.76776695 5.70710678,6.29289322 6,6 C6.29289322,5.70710678 6.76776695,5.70710678 7.06066017,6 L12,10.9393398 L16.9393398,6 C17.232233,5.70710678 17.7071068,5.70710678 18,6 C18.2928932,6.29289322 18.2928932,6.76776695 18,7.06066017 L13.0606602,12 L18,16.9393398 C18.2928932,17.232233 18.2928932,17.7071068 18,18 C17.7071068,18.2928932 17.232233,18.2928932 16.9393398,18 L12,13.0606602 L7.06066017,18 C6.76776695,18.2928932 6.29289322,18.2928932 6,18 C5.70710678,17.7071068 5.70710678,17.232233 6,16.9393398 L10.9393398,12 Z\"></path></svg>\r\n\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t</button>\r\n\t\t\t\t\t</OverlayTrigger>\r\n\r\n\t\t\t\t\t<button>\r\n\t\t\t\t\t\t<svg viewBox=\"0 0 1024 1024\"><path d=\"M960.132 210.186c0-0.444-0.050-0.874-0.066-1.312-0.024-0.684-0.044-1.366-0.104-2.046-0.060-0.74-0.158-1.468-0.26-2.198-0.080-0.564-0.156-1.128-0.258-1.692-0.146-0.792-0.328-1.566-0.518-2.34-0.124-0.508-0.244-1.014-0.39-1.518-0.224-0.784-0.488-1.548-0.76-2.312-0.176-0.49-0.344-0.98-0.538-1.466-0.302-0.754-0.642-1.486-0.988-2.216-0.224-0.472-0.436-0.946-0.68-1.41-0.398-0.762-0.838-1.496-1.284-2.228-0.242-0.396-0.466-0.798-0.722-1.19-0.608-0.924-1.262-1.81-1.942-2.678-0.132-0.168-0.248-0.346-0.382-0.512-0.98-1.212-2.028-2.364-3.14-3.454l-104.020-104.9c-3.714-3.714-7.988-6.518-12.542-8.464-0.088-0.040-0.174-0.084-0.262-0.122-0.994-0.418-2.006-0.774-3.024-1.108-0.242-0.080-0.474-0.176-0.72-0.252-0.942-0.288-1.894-0.516-2.854-0.732-0.334-0.076-0.658-0.176-0.996-0.244-0.998-0.2-2.004-0.336-3.010-0.458-0.306-0.038-0.606-0.1-0.912-0.13-1.322-0.13-2.65-0.204-3.976-0.204h-391.784c-1.754 0-3.468 0.152-5.162 0.372-19.646 2.538-34.838 19.29-34.838 39.628v145.516h-279.874c-1.754 0-3.468 0.152-5.162 0.372-19.646 2.538-34.838 19.29-34.838 39.628v628.28c0 22.094 17.91 40 40 40h496.118c13.808 0 25.98-6.996 33.168-17.636 0.102-0.148 2.084-3.466 2.128-3.548 2.992-5.612 4.704-12.010 4.704-18.808 0 0 0 0 0-0.004v-145.518h279.874c13.808 0 25.98-6.996 33.168-17.636 0.102-0.148 2.084-3.466 2.128-3.548 2.992-5.612 4.704-12.010 4.704-18.808 0 0 0 0 0-0.004v-521.828c0.008-0.23-0.016-0.458-0.014-0.688 0.002-0.202 0.028-0.39 0.028-0.584zM144.124 878.792v-548.278h311.752v65.186c0 22.090 17.91 40 40 40h64.366v443.092h-416.118zM640.244 693.278v-296.31c0.006-0.23-0.018-0.458-0.014-0.688 0.004-0.196 0.030-0.382 0.030-0.578 0-0.444-0.052-0.874-0.066-1.312-0.024-0.684-0.044-1.366-0.104-2.046-0.062-0.74-0.16-1.468-0.262-2.198-0.078-0.564-0.152-1.128-0.258-1.692-0.144-0.792-0.324-1.566-0.516-2.34-0.124-0.508-0.246-1.014-0.39-1.518-0.226-0.784-0.488-1.548-0.76-2.312-0.174-0.49-0.342-0.98-0.538-1.466-0.302-0.754-0.64-1.486-0.988-2.216-0.222-0.472-0.438-0.946-0.68-1.41-0.398-0.762-0.838-1.496-1.284-2.228-0.242-0.396-0.466-0.798-0.724-1.19-0.606-0.924-1.262-1.81-1.942-2.678-0.13-0.168-0.246-0.346-0.382-0.512-0.978-1.212-2.028-2.364-3.138-3.454l-104.020-104.9c-3.714-3.714-7.988-6.518-12.542-8.464-0.088-0.040-0.172-0.084-0.262-0.122-0.994-0.418-2.004-0.774-3.024-1.108-0.242-0.080-0.476-0.176-0.72-0.252-0.942-0.288-1.896-0.516-2.854-0.732-0.334-0.076-0.658-0.176-0.996-0.244-0.998-0.2-2.004-0.336-3.012-0.458-0.304-0.038-0.602-0.1-0.91-0.13-1.322-0.13-2.648-0.204-3.976-0.204h-31.916v-105.516h311.752v65.186c0 22.090 17.91 40 40 40h64.366v443.092h-239.87z\"></path></svg>\r\n\t\t\t\t\t</button>\r\n\t\t\t\t</div>\r\n\t\t\t</div>\r\n\t\t);\r\n\t}\r\n}\r\n\r\nconst mapStateToProps = (state: AppState) => ({\r\n\tshapes: state.shapes\r\n});\r\n\r\nexport default connect(\r\n\tmapStateToProps,\r\n\t{ setShapes }\r\n)(ToolBar);","import { MouseActionTypes, UPDATE_MOUSE_LOCATION } from \"./types\";\r\n\r\nexport function updateMouseLocation(x: number, y: number) : MouseActionTypes {\r\n\treturn {\r\n\t\ttype: UPDATE_MOUSE_LOCATION,\r\n\t\tpayload: {\r\n\t\t\tx,\r\n\t\t\ty\r\n\t\t}\r\n\t};\r\n}","// Describing the mouse's slice of state\r\nexport interface MouseState {\r\n\txPointer: number;\r\n\tyPointer: number;\r\n}\r\n\r\n// Describing the different ACTION NAMES available\r\nexport const UPDATE_MOUSE_LOCATION = \"UPDATE_LOCATION\";\r\n\r\ninterface UpdateMouseLocation {\r\n\ttype: typeof UPDATE_MOUSE_LOCATION;\r\n\tpayload: {\r\n\t\tx: number;\r\n\t\ty: number;\r\n\t};\r\n}\r\n\r\nexport type MouseActionTypes =\r\n\tUpdateMouseLocation;","import * as React from 'react';\r\nimport Card from 'react-bootstrap/Card';\r\n//import Button from 'react-bootstrap/Button';\r\n//import img from '../../assets/templates/resnet.png';\r\nimport './template.scss';\r\n\r\nexport interface ITemplateProps {\r\n\ttitle: string;\r\n\tdesc: string;\r\n\tchooseTemplate: () => void;\r\n}\r\n\r\nexport default class Template extends React.Component<ITemplateProps> {\r\n\r\n\tpublic render() {\r\n\t\treturn (\r\n\t\t<Card bsPrefix={\"card template-card\"} onClick={this.props.chooseTemplate}>\r\n\t\t\t<Card.Body>\r\n\t\t\t\t<strong>{this.props.title}</strong>\r\n\t\t\t</Card.Body>\r\n\t\t<Card.Footer>{this.props.desc}</Card.Footer>\r\n\t\t</Card>\r\n\t\t);\r\n\t}\r\n}\r\n","import { Shape } from \"../../store/shapes/types\";\r\nimport { layersMap } from \"../../interfaces/shapes\";\r\n\r\nconst time = new Date().getTime() - 2000;\r\n\r\nconst input : Shape = {\r\n\tname: \"Input\",\r\n\ttimestamp: time - 1,\r\n\tshape: layersMap.Input.create(),\r\n\tx: 55,\r\n\ty: 218,\r\n\tcenterPosition: layersMap.Input.centerPosition,\r\n\tconnectedTo: [],\r\n\tconnectedToMe: []\r\n};\r\n\r\nconst fc1 : Shape = {\r\n\tname: \"FullyConnected\",\r\n\ttimestamp: time - 2,\r\n\tshape: layersMap.FullyConnected.create(),\r\n\tx: 168,\r\n\ty: 83,\r\n\tcenterPosition: layersMap.FullyConnected.centerPosition,\r\n\tconnectedTo: [],\r\n\tconnectedToMe: []\r\n};\r\n\r\nconst fc2 : Shape = {\r\n\tname: \"FullyConnected\",\r\n\ttimestamp: time - 3,\r\n\tshape: layersMap.FullyConnected.create(),\r\n\tx: 373,\r\n\ty: 83,\r\n\tcenterPosition: layersMap.FullyConnected.centerPosition,\r\n\tconnectedTo: [],\r\n\tconnectedToMe: []\r\n};\r\n\r\nconst norm1 : Shape = {\r\n\tname: \"BatchNormalization\",\r\n\ttimestamp: time - 4,\r\n\tshape: layersMap.BatchNormalization.create(),\r\n\tx: 261,\r\n\ty: 103,\r\n\tcenterPosition: layersMap.BatchNormalization.centerPosition,\r\n\tconnectedTo: [],\r\n\tconnectedToMe: []\r\n};\r\n\r\nconst norm2 : Shape = {\r\n\tname: \"BatchNormalization\",\r\n\ttimestamp: time - 5,\r\n\tshape: layersMap.BatchNormalization.create(),\r\n\tx: 453,\r\n\ty: 103,\r\n\tcenterPosition: layersMap.BatchNormalization.centerPosition,\r\n\tconnectedTo: [],\r\n\tconnectedToMe: []\r\n};\r\n\r\nconst add : Shape = {\r\n\tname: \"Addition\",\r\n\ttimestamp: time - 6,\r\n\tshape: layersMap.Addition.create(),\r\n\tx: 453,\r\n\ty: 214,\r\n\tcenterPosition: layersMap.Addition.centerPosition,\r\n\tconnectedTo: [],\r\n\tconnectedToMe: []\r\n};\r\n\r\nconst output : Shape = {\r\n\tname: \"Output\",\r\n\ttimestamp: time - 7,\r\n\tshape: layersMap.Output.create(),\r\n\tx: 627,\r\n\ty: 194,\r\n\tcenterPosition: layersMap.Output.centerPosition,\r\n\tconnectedTo: [],\r\n\tconnectedToMe: []\r\n};\r\n\r\ninput.connectedTo.push(fc1,add);\r\nfc1.connectedToMe.push(input);\r\nfc1.connectedTo.push(norm1);\r\nnorm1.connectedToMe.push(fc1);\r\nnorm1.connectedTo.push(fc2);\r\nfc2.connectedToMe.push(norm1);\r\nfc2.connectedTo.push(norm2);\r\nnorm2.connectedToMe.push(fc2);\r\nnorm2.connectedTo.push(add);\r\nadd.connectedToMe.push(norm2,input);\r\nadd.connectedTo.push(output);\r\n\r\nexport default [input, fc1, norm1, fc2, norm2, add, output];","import * as React from 'react';\r\nimport Modal from 'react-bootstrap/Modal';\r\nimport Button from 'react-bootstrap/Button';\r\nimport CardDeck from 'react-bootstrap/CardDeck';\r\nimport Template from './Template';\r\nimport ResNet from '../../utils/generateTemplate/resnet';\r\nimport { connect } from 'react-redux';\r\nimport { setShapes } from '../../store/shapes/actions';\r\nimport { seedNewShapes } from '../../utils/seedShapes';\r\n\r\nexport interface ITemplatesModalProps {\r\n\tshow: boolean;\r\n\tonHide: () => void;\r\n\tsetShapes: typeof setShapes;\r\n}\r\n\r\nclass TemplatesModal extends React.Component<ITemplatesModalProps> {\r\n\thandleTemplate = (temp: string) => {\r\n\t\tswitch(temp) {\r\n\t\t\tcase \"resnet\":\r\n\t\t\t\tthis.props.setShapes(ResNet);\r\n\t\t\t\tbreak;\r\n\r\n\t\t\tcase \"blank\":\r\n\t\t\t\tthis.props.setShapes(seedNewShapes);\r\n\t\t\t\tbreak;\r\n\t\t}\r\n\r\n\t\tthis.props.onHide();\r\n\t}\r\n\r\n\tpublic render() {\r\n\t\treturn (\r\n\t\t<Modal\r\n\t\t\t{...this.props}\r\n\t\t\tsize=\"lg\"\r\n\t\t\taria-labelledby=\"contained-modal-title-vcenter\"\r\n\t\t\tcentered\r\n\t\t>\r\n\t\t\t<Modal.Header closeButton>\r\n\t\t\t\t<Modal.Title id=\"contained-modal-title-vcenter\">\r\n\t\t\t\t\tSelect Pretrained Networks\r\n\t\t\t\t</Modal.Title>\r\n\t\t\t</Modal.Header>\r\n\t\t\t<Modal.Body>\r\n\t\t\t\t<CardDeck>\r\n\t\t\t\t\t<Template\r\n\t\t\t\t\t\tchooseTemplate={() => this.handleTemplate(\"resnet\")}\r\n\t\t\t\t\t\ttitle={\"ResNet\"}\r\n\t\t\t\t\t\tdesc={\"A ResNet Architecture\"} />\r\n\t\t\t\t\t\r\n\t\t\t\t\t<Template\r\n\t\t\t\t\t\tchooseTemplate={() => this.handleTemplate(\"blank\")}\r\n\t\t\t\t\t\ttitle={\"Blank\"}\r\n\t\t\t\t\t\tdesc={\"Open new template\"} />\r\n\t\t\t\t</CardDeck>\r\n\t\t\t</Modal.Body>\r\n\t\t\t<Modal.Footer>\r\n\t\t\t\t<Button onClick={this.props.onHide}>Close</Button>\r\n\t\t\t</Modal.Footer>\r\n\t\t</Modal>\r\n\t\t);\r\n\t}\r\n}\r\n\r\nexport default connect(\r\n\tnull,\r\n\t{ setShapes }\r\n)(TemplatesModal);","import * as React from 'react';\r\nimport './sidebar.scss';\r\nimport Button from 'react-bootstrap/Button';\r\n//import Card from 'react-bootstrap/Card';\r\nimport ListGroup from 'react-bootstrap/ListGroup';\r\nimport Dropdown from 'react-bootstrap/Dropdown';\r\nimport { addShape, editActiveShape } from '../../store/shapes/actions';\r\nimport { updateMouseLocation } from '../../store/mouse/actions';\r\nimport { ShapeState, Shape } from '../../store/shapes/types';\r\nimport { AppState } from '../../store';\r\nimport { connect } from 'react-redux';\r\nimport { layersMap } from '../../interfaces/shapes';\r\nimport TemplatesModal from '../TemplatesModal';\r\n\r\nexport interface ISideBarProps {\r\n\taddShape: typeof addShape;\r\n\teditActiveShape: typeof editActiveShape;\r\n\tupdateMouseLocation: typeof updateMouseLocation;\r\n\tshapes: ShapeState;\r\n}\r\n\r\nexport interface ISideBarState {\r\n\tmodalShow: boolean;\r\n}\r\n\r\nclass SideBar extends React.Component<ISideBarProps, ISideBarState>\r\n{\r\n\tstate = {\r\n\t\tmodalShow: false\r\n\t};\r\n\r\n\thandleSetModal = (pred: boolean) => {\r\n\t\tthis.setState({\r\n\t\t\tmodalShow: pred\r\n\t\t});\r\n\t};\r\n\r\n\tcreateShape = (shapeName: string) => {\r\n\t\tconst layer = layersMap[shapeName];\r\n\r\n\t\tconst newObject : Shape = {\r\n\t\t\tname: shapeName,\r\n\t\t\ttimestamp: new Date().getTime(),\r\n\t\t\tshape: layer.create(),\r\n\t\t\tx: 100 + Math.random() * 100,\r\n\t\t\ty: 100 + Math.random() * 100,\r\n\t\t\tcenterPosition: layer.centerPosition,\r\n\t\t\tconnectedTo: [],\r\n\t\t\tconnectedToMe: []\r\n\t\t};\r\n\r\n\t\tthis.props.addShape(newObject);\r\n\t}\r\n\r\n\ttoggleActive = (timestamp: number) => {\r\n\t\tthis.props.editActiveShape(\r\n\t\t\ttimestamp\r\n\t\t)\r\n\r\n\t\tconst getActiveShape = this.props.shapes.shapes.find(s => s.timestamp === timestamp)!;\r\n\r\n\t\tthis.props.updateMouseLocation(\r\n\t\t\tgetActiveShape.x + getActiveShape.centerPosition[0],\r\n\t\t\tgetActiveShape.y + getActiveShape.centerPosition[1]\r\n\t\t);\r\n\t}\r\n\r\n\tpublic render() {\r\n\t\tconst targetTimeStamp = this.props.shapes.sourceShape ? this.props.shapes.sourceShape.timestamp : -1;\r\n\r\n\t\treturn (\r\n\t\t\t<React.Fragment>\r\n\t\t\t<div className=\"side-bar\">\r\n\t\t\t\t<Dropdown>\r\n\t\t\t\t\t<Dropdown.Toggle variant=\"success\" id=\"dropdown-basic\" style={{width: \"100%\", marginBottom: \"10px\"}}>\r\n\t\t\t\t\t\tAdd new layer&nbsp;&nbsp;\r\n\t\t\t\t\t</Dropdown.Toggle>\r\n\r\n\t\t\t\t\t<Button \r\n\t\t\t\t\t\tvariant=\"primary\"\r\n\t\t\t\t\t\tstyle={{width: \"100%\", marginBottom: \"10px\"}}\r\n\t\t\t\t\t\tonClick={() => this.handleSetModal(true)}>Choose Template</Button>\r\n\t\t\t\t\t<Button variant=\"danger\" style={{width: \"100%\"}}>Get Code</Button>\r\n\r\n\t\t\t\t\t<Dropdown.Menu style={{width: \"100%\"}}>\r\n\t\t\t\t\t\t<Dropdown.Header>Layers</Dropdown.Header>\r\n\t\t\t\t\t\t<Dropdown.Item onClick={() => this.createShape(\"FullyConnected\")}>Fully Connected</Dropdown.Item>\r\n\t\t\t\t\t\t<Dropdown.Item onClick={() => this.createShape(\"Convolutional\")}>Convolutional</Dropdown.Item>\r\n\t\t\t\t\t\t<Dropdown.Item onClick={() => this.createShape(\"MaxPooling\")}>Max Pooling</Dropdown.Item>\r\n\t\t\t\t\t\t<Dropdown.Item onClick={() => this.createShape(\"Concatenate\")}>Concatenate</Dropdown.Item>\r\n\t\t\t\t\t\t<Dropdown.Item onClick={() => this.createShape(\"Dropout\")}>Dropout</Dropdown.Item>\r\n\t\t\t\t\t\t<Dropdown.Item onClick={() => this.createShape(\"BatchNormalization\")}>Batch Norm</Dropdown.Item>\r\n\t\t\t\t\t\t<Dropdown.Item onClick={() => this.createShape(\"Flatten\")}>Flatten</Dropdown.Item>\r\n\t\t\t\t\t\t<Dropdown.Item onClick={() => this.createShape(\"Addition\")}>Add</Dropdown.Item>\r\n\t\t\t\t\t\t<Dropdown.Divider />\r\n\t\t\t\t\t\t<Dropdown.Header>Activation</Dropdown.Header>\r\n\t\t\t\t\t\t<Dropdown.Item>ReLU</Dropdown.Item>\r\n\t\t\t\t\t\t<Dropdown.Item>Sigmoid</Dropdown.Item>\r\n\t\t\t\t\t\t<Dropdown.Item>Tanh</Dropdown.Item>\r\n\t\t\t\t\t</Dropdown.Menu>\r\n\t\t\t\t</Dropdown>\r\n\t\t\t\t<br />\r\n\t\t\t\t\r\n\t\t\t\t<h6 style={{paddingLeft: \"5px\"}}>Layers</h6>\r\n\t\t\t\t<ListGroup defaultActiveKey=\"#link1\">\r\n\t\t\t\t\t{\r\n\t\t\t\t\t\tthis.props.shapes.shapes.map(shape => \r\n\t\t\t\t\t\t\t<ListGroup.Item\r\n\t\t\t\t\t\t\t\taction\r\n\t\t\t\t\t\t\t\tkey={shape.timestamp}\r\n\t\t\t\t\t\t\t\tactive={shape.timestamp === targetTimeStamp ? true : false}\r\n\t\t\t\t\t\t\t\tonClick={() => this.toggleActive(shape.timestamp)}\r\n\t\t\t\t\t\t\t>\r\n\t\t\t\t\t\t\t\t{shape.name}\r\n\t\t\t\t\t\t\t</ListGroup.Item>\r\n\t\t\t\t\t\t)\r\n\t\t\t\t\t}\r\n\t\t\t\t</ListGroup>\r\n\t\t\t</div>\r\n\t\t\t\r\n\t\t\t<TemplatesModal \r\n\t\t\t\tshow={this.state.modalShow}\r\n\t\t\t\tonHide={() => this.handleSetModal(false)}\r\n\t\t\t/>\r\n\t\t\t</React.Fragment>\r\n\t\t);\r\n\t}\r\n}\r\n\r\nconst mapStateToProps = (state: AppState) => ({\r\n\tshapes: state.shapes\r\n});\r\n\r\nexport default connect(\r\n\tmapStateToProps,\r\n\t{ addShape, editActiveShape, updateMouseLocation }\r\n)(SideBar);","export const manhattanDistance = (x1: number, y1: number, x2: number, y2: number) => {\r\n\treturn x1-x2 + y1-y2;\r\n}","import * as React from 'react';\r\nimport { connect } from 'react-redux';\r\nimport { AppState } from '../../store';\r\nimport { editActiveShape, updateShapePositionAction, addArrowAndUpdateConnections } from '../../store/shapes/actions';\r\nimport { updateMouseLocation } from '../../store/mouse/actions';\r\nimport { ShapeState, Shape } from '../../store/shapes/types';\r\nimport { manhattanDistance } from '../../utils/distance';\r\n\r\nexport interface IDraggableSVGProps {\r\n\tcurrentShape: Shape;\r\n\tshapes: ShapeState;\r\n\tchildren: React.ReactNode;\r\n\tisMarked: boolean;\r\n\teditActiveShape: typeof editActiveShape;\r\n\tupdateShapePositionAction: typeof updateShapePositionAction;\r\n\taddArrowAndUpdateConnections: typeof addArrowAndUpdateConnections;\r\n\tupdateMouseLocation: typeof updateMouseLocation;\r\n}\r\n\r\n// We must maintain a local state in addition to the redux shape attributes\r\n// so we could move shapes that are not targeted.\r\n\r\nexport interface IDraggableSVGState {\r\n\tx: number;\r\n\ty: number;\r\n\thistoryX: number;\r\n\thistoryY: number;\r\n\tcurrentMove: boolean;\r\n\toffset: {\r\n\t\tx: number;\r\n\t\ty: number;\r\n\t}\r\n}\r\n\r\nclass DraggableSVG extends React.PureComponent<IDraggableSVGProps, IDraggableSVGState> {\r\n\tconstructor(props: IDraggableSVGProps) {\r\n\t\tsuper(props);\r\n\r\n\t\tthis.state = {\r\n\t\t\tx: this.props.currentShape.x,\r\n\t\t\ty: this.props.currentShape.y,\r\n\t\t\thistoryX: 100,\r\n\t\t\thistoryY: 100,\r\n\t\t\tcurrentMove: false,\r\n\t\t\toffset: {\r\n\t\t\t\tx: 0,\r\n\t\t\t\ty: 0\r\n\t\t\t}\r\n\t\t}\r\n\t}\r\n\r\n\t// TODO: use this component to avoid wasted rendering.\r\n\t/*shouldComponentUpdate() {\r\n\t\treturn false;\r\n\t}*/\r\n\r\n\thandlePointerDown = (e : React.PointerEvent<EventTarget>) => {\r\n\t\tconst el = e.target as HTMLInputElement;\r\n\t\tconst bbox = el.getBoundingClientRect();\r\n\t\tconst x = e.clientX - bbox.left;\r\n\t\tconst y = e.clientY - bbox.top;\r\n\r\n\t\tel.setPointerCapture(e.pointerId);\r\n\t\tthis.setState((oldState) => ({\r\n\t\t\tcurrentMove: true,\r\n\t\t\thistoryX: oldState.x,\r\n\t\t\thistoryY: oldState.y,\r\n\t\t\toffset: {\r\n\t\t\t\tx,\r\n\t\t\t\ty\r\n\t\t\t}})\r\n\t\t);\r\n\t};\r\n\r\n\r\n\t// TODO: Math.floor the position, this will improve the performance significantly.\r\n\t// and also a pure component\r\n\thandlePointerMove = (e: React.PointerEvent<EventTarget>) => {\r\n\t\tconst el = e.target as HTMLInputElement;\r\n\t\tconst bbox = el.getBoundingClientRect();\r\n\t\tconst x = e.clientX - bbox.left;\r\n\t\tconst y = e.clientY - bbox.top;\r\n\r\n\t\tconst newX = this.state.x - (this.state.offset.x - x);\r\n\t\tconst newY = this.state.y - (this.state.offset.y - y);\r\n\t\t\r\n\t\tif (this.state.currentMove) {\r\n\t\t\t\r\n\t\t\t// we might pass this local state since we use redux\r\n\t\t\tthis.setState({\r\n\t\t\t\tx: newX < 0 ? 0 : newX,\r\n\t\t\t\ty: newY < 0 ? 0 : newY\r\n\t\t\t});\r\n\r\n\t\t\t// Update the position of the current shape in the redux\r\n\t\t\tthis.props.updateShapePositionAction(\r\n\t\t\t\tthis.props.currentShape.timestamp,\r\n\t\t\t\tnewX < 0 ? 0 : newX,\r\n\t\t\t\tnewY < 0 ? 0 : newY\r\n\t\t\t\t//this.state.x,\r\n\t\t\t\t//this.state.y\r\n\t\t\t);\r\n\r\n\t\t\t// If the current shape moved and is not the active shape\r\n\t\t\t// Then we'll remove the active shape (after a certain threshold of the manhattan distance).\r\n\t\t\tif(\r\n\t\t\t\tthis.props.shapes.sourceShape &&\r\n\t\t\t\tthis.props.shapes.sourceShape.timestamp !== this.props.currentShape.timestamp &&\r\n\t\t\t\tMath.abs(manhattanDistance(this.state.x, this.state.y, this.state.historyX, this.state.historyY)) > 10\r\n\t\t\t) {\r\n\t\t\t\tthis.props.editActiveShape(\r\n\t\t\t\t\t-1\r\n\t\t\t\t);\r\n\t\t\t}\r\n\t\t}\r\n\t};\r\n\r\n\thandlePointerUp = () => {\r\n\t\tthis.setState({\r\n\t\t\tcurrentMove: false\r\n\t\t});\r\n\r\n\t\t// If the user just clicked on a shape without moving it, then we'll select it\r\n\t\t// And since the position is so sensitive, we'll check if the distance between\r\n\t\t// the position when we start clicked on the shape and when we stopped moving it\r\n\t\t// is |distance| < 5 in manhattan distance ( which is the cheaper to calculate )\r\n\t\t\r\n\t\tif(Math.abs(manhattanDistance(this.state.x, this.state.y, this.state.historyX, this.state.historyY)) < 6)\r\n\t\t{\r\n\t\t\t// Once we updated the active shape, to avoid mouse glitching,\r\n\t\t\t// we'll set the location of the mouse position to be the active shape\r\n\r\n\t\t\tthis.props.updateMouseLocation(\r\n\t\t\t\tthis.state.x + this.props.currentShape.centerPosition[0],\r\n\t\t\t\tthis.state.y + this.props.currentShape.centerPosition[1]\r\n\t\t\t);\r\n\r\n\t\t\t// Once we confirmed that the shape didn't move ( in our distance definition ),\r\n\t\t\t// We'll check if the currentShape isn't equal the active shape and check if we should draw a line between\r\n\t\t\t// the target shape and the current one\r\n\r\n\t\t\t// 1. Checking if targetShape exists and edge case\r\n\t\t\t// where the source Shape equals to the current Shape\r\n\t\t\tif(this.props.shapes.sourceShape && this.props.shapes.sourceShape.timestamp !== this.props.currentShape.timestamp)\r\n\t\t\t{\t\r\n\t\t\t\t// Then, we'll make sure there isn't an arrow already between source and target\r\n\t\t\t\t// We can check it in the connected list of the source shape\r\n\t\t\t\t\r\n\t\t\t\tif(this.props.shapes.sourceShape.connectedTo.filter(s => s.timestamp === this.props.currentShape.timestamp).length === 0)\r\n\t\t\t\t{\r\n\t\t\t\t\t// If we got this far, we'll draw an arrow between source and target shapes\r\n\r\n\t\t\t\t\tconst getSourceShape = this.props.shapes.sourceShape;\r\n\t\t\t\t\tconst getTargetShape = this.props.shapes.shapes.find(s => s.timestamp === this.props.currentShape.timestamp);\r\n\t\t\t\t\t\r\n\t\t\t\t\tthis.props.addArrowAndUpdateConnections(new Date().getTime(), getSourceShape, getTargetShape!);\r\n\t\t\t\t}\r\n\t\t\t}\r\n\r\n\t\t\t// Sets the current shape as the active shape\r\n\t\t\tthis.props.editActiveShape(\r\n\t\t\t\tthis.props.currentShape.timestamp\r\n\t\t\t);\r\n\t\t}\r\n\t};\r\n\r\n\tpublic render() {\r\n\t\t// Edge case: if we change the shape location from the Details Bar,\r\n\t\t// it means that the current shape is the sourceShape,\r\n\t\t// to avoid cases where we need to choose between sourceShape and this state\r\n\r\n\t\t// we'll simply use this.props.currentShape to display the shape location\r\n\r\n\t\t//console.log(\"RENDERING DRAGGABLESVG!\");\r\n\r\n\t\treturn (\r\n\t\t\t/*this.props.render({\r\n\t\t\t\t...this.state,\r\n\t\t\t\tactive: isShapeActive,\r\n\t\t\t\thandlePointerDown: this.handlePointerDown,\r\n\t\t\t\thandlePointerMove: this.handlePointerMove,\r\n\t\t\t\thandlePointerUp: this.handlePointerUp\r\n\t\t\t})*/\r\n\r\n\t\t\t<svg \r\n\t\t\t\tx={this.props.currentShape.x}\r\n\t\t\t\ty={this.props.currentShape.y}\r\n\t\t\t\tonPointerDown={this.handlePointerDown}\r\n\t\t\t\tonPointerUp={this.handlePointerUp}\r\n\t\t\t\tonPointerMove={this.handlePointerMove}>\r\n\t\t\t\t\t{this.props.children}\r\n\t\t\t</svg>\r\n\t\t);\r\n\t}\r\n}\r\n\r\nconst mapStateToProps = (state: AppState) => ({\r\n\tshapes: state.shapes\r\n});\r\n\r\nexport default connect(\r\n\tmapStateToProps,\r\n\t{ editActiveShape, updateShapePositionAction, addArrowAndUpdateConnections, updateMouseLocation }\r\n)(DraggableSVG);","import * as React from 'react';\r\nimport { AppState } from '../../store';\r\nimport { connect } from 'react-redux';\r\nimport { ShapeState } from '../../store/shapes/types';\r\n\r\nexport interface IArrowsProps {\r\n\tshapes: ShapeState;\r\n}\r\n\r\nexport interface IArrowsState {\r\n}\r\n\r\nclass Arrows extends React.Component<IArrowsProps, IArrowsState> {\r\n\tpublic render() {\r\n\t\treturn (\r\n\t\t\t<React.Fragment>\r\n\t\t\t{\r\n\t\t\tthis.props.shapes.shapes.map(sourceShape => sourceShape.connectedTo.map(targetShape => {\r\n\t\t\t\t\r\n\t\t\t\tconst x1 = sourceShape.x + sourceShape.centerPosition[0];\r\n\t\t\t\tconst x2 = targetShape.x + targetShape.centerPosition[0];\r\n\r\n\t\t\t\tconst y1 = sourceShape.y + sourceShape.centerPosition[1];\r\n\t\t\t\tconst y2 = targetShape.y + targetShape.centerPosition[1];\r\n\r\n\t\t\t\tconst xMid = (x1 + x2) / 2;\r\n\t\t\t\tconst yMid = (y1 + y2) / 2;\r\n\r\n\t\t\t\t/*const points = [\r\n\t\t\t\t\t[xMid + 2,  yMid + 7],\r\n\t\t\t\t\t[xMid + 0,  yMid + 0],\r\n\t\t\t\t\t[xMid + 11, yMid + 7],\r\n\t\t\t\t\t[xMid + 0,  yMid + 14]\r\n\t\t\t\t];*/\r\n\r\n\t\t\t\treturn (\r\n\t\t\t\t\t<polyline \r\n\t\t\t\t\t\tkey={sourceShape.timestamp + \" \" + targetShape.timestamp}\r\n\t\t\t\t\t\tmarkerMid=\"url(#arrow)\"\r\n\t\t\t\t\t\tpoints={`${x1},${y1} ${xMid},${yMid} ${x2},${y2}`}\r\n\t\t\t\t\t\tfill=\"none\"\r\n\t\t\t\t\t\tstroke=\"black\"\r\n\t\t\t\t\t/>\r\n\t\t\t\t);\r\n\t\t\t}))\r\n\t\t\t}\r\n\t\t\t</React.Fragment>\r\n\t\t);\r\n\t}\r\n}\r\n\r\nconst mapStateToProps = (state: AppState) => ({\r\n\tshapes: state.shapes\r\n});\r\n\r\nexport default connect(\r\n\tmapStateToProps\r\n)(Arrows);","import * as React from 'react';\r\nimport './diagram.scss';\r\n\r\nimport DraggableSVG from \"./DraggableSVG\";\r\n\r\nimport { editActiveShape, setShapes } from '../../store/shapes/actions';\r\nimport { updateMouseLocation } from '../../store/mouse/actions';\r\nimport { ShapeState } from '../../store/shapes/types';\r\nimport { connect } from 'react-redux';\r\nimport { AppState } from '../../store';\r\nimport Arrows from './Arrows';\r\nimport { MouseState } from '../../store/mouse/types';\r\nimport { seedInitShapes } from '../../utils/seedShapes';\r\n\r\ninterface MouseLocation {\r\n\tnativeEvent: {\r\n\t\toffsetX: number;\r\n\t\toffsetY: number;\r\n\t};\r\n}\r\n\r\nexport interface IDiagramContainerProps {\r\n\tshapes: ShapeState;\r\n\tmouse: MouseState;\r\n\teditActiveShape: typeof editActiveShape;\r\n\tupdateMouseLocation: typeof updateMouseLocation;\r\n\tsetShapes: typeof setShapes;\r\n}\r\n\r\nexport interface IDiagramContainerState {\r\n\t//arrowX?: number;\r\n\t//arrowY?: number;\r\n\tisMouseInsideSVG: boolean;\r\n}\r\n\r\nclass DiagramContainer extends React.PureComponent<IDiagramContainerProps, IDiagramContainerState> {\r\n\t//refElement = React.createRef<HTMLDivElement>();\r\n\t\r\n\tstate = {\r\n\t\tisMouseInsideSVG: false\r\n\t};\r\n\r\n\tcomponentDidMount() {\r\n\t\tthis.props.setShapes(seedInitShapes);\r\n\t}\r\n\r\n\thandleClick = (event : React.MouseEvent) => {\r\n\t\t// Checks if we clicked on the SVG element, but not any element inside.\r\n\t\tif (event.currentTarget === event.target) {\r\n\t\t\t// If that's the case, we'll remove the \"active\" from any shape\r\n\t\t\tthis.props.editActiveShape(-1);\r\n\t\t}\r\n\t}\r\n\r\n\thandlePointerMovement = (e: React.MouseEvent | MouseLocation) => {\r\n\t\tif(this.props.shapes.sourceShape)\r\n\t\t{\r\n\t\t\tconst x = e.nativeEvent.offsetX;\r\n\t\t\tconst y = e.nativeEvent.offsetY;\r\n\r\n\t\t\t/*this.setState({\r\n\t\t\t\tarrowX: x,\r\n\t\t\t\tarrowY: y\r\n\t\t\t});*/\r\n\r\n\t\t\tthis.props.updateMouseLocation(x, y);\r\n\r\n\t\t}\r\n\t}\r\n\r\n\thandleRightClick = (event: React.MouseEvent) => {\r\n\t\t// Disable active shape if needed\r\n\t\tthis.handleClick(event);\r\n\t\t\r\n\t\t// Prevent default right click panel\r\n\t\tevent.preventDefault();\r\n\t}\r\n\r\n\thandleKeyDown = (event: React.KeyboardEvent<SVGSVGElement>) => {\r\n\t\t// If we pressed Esc, we'll remove active shape\r\n\t\tif(event.keyCode === 27)\r\n\t\t\tthis.props.editActiveShape(-1);\r\n\t}\r\n\r\n\thandleMouseLeave = () => {\r\n\t\tthis.setState({\r\n\t\t\tisMouseInsideSVG: false\r\n\t\t});\r\n\t}\r\n\r\n\thandleMouseEnter = () => {\r\n\t\tthis.setState({\r\n\t\t\tisMouseInsideSVG: true\r\n\t\t});\r\n\t}\r\n\r\n\tpublic render() {\r\n\t\treturn (\r\n\t\t\t<div className=\"diagram-container\">\r\n\t\t\t\t<svg width=\"100%\" height=\"100%\"\r\n\t\t\t\t\t\tonClick={this.handleClick}\r\n\t\t\t\t\t\tonMouseMove={this.handlePointerMovement}\r\n\t\t\t\t\t\tonContextMenu={this.handleRightClick}\r\n\t\t\t\t\t\tonKeyDown={this.handleKeyDown}\r\n\t\t\t\t\t\tonMouseLeave={this.handleMouseLeave}\r\n\t\t\t\t\t\tonMouseEnter={this.handleMouseEnter}\r\n\t\t\t\t\t\trole=\"button\"\r\n\t\t\t\t\t\ttabIndex={0}\r\n\t\t\t\t\t>\r\n\t\t\t\t\t<defs>\t\r\n\t\t\t\t\t\t<marker orient='auto' id=\"arrow\" refX=\"0\" refY=\"7\"\r\n\t\t\t\t\t\t\tmarkerWidth=\"80\" markerHeight=\"80\">\r\n\t\t\t\t\t\t\t<polygon\r\n\t\t\t\t\t\t\t\t\tpoints=\"2,7 0,0 11,7 0,14\"\r\n\t\t\t\t\t\t\t\t\tstroke=\"red\"\r\n\t\t\t\t\t\t\t\t\tfill=\"red\" \r\n\t\t\t\t\t\t\t\t/>\r\n\t\t\t\t\t\t</marker>\r\n\t\t\t\t\t</defs>\t\r\n\t\t\t\t\t{\r\n\t\t\t\t\t\tthis.props.shapes.sourceShape && this.state.isMouseInsideSVG ?\r\n\t\t\t\t\t\t<line\r\n\t\t\t\t\t\t\tonClick={this.handleClick}\r\n\t\t\t\t\t\t\tonContextMenu={this.handleRightClick}\r\n\t\t\t\t\t\t\tx1={this.props.shapes.sourceShape.x + this.props.shapes.sourceShape.centerPosition[0]}\r\n\t\t\t\t\t\t\ty1={this.props.shapes.sourceShape.y + this.props.shapes.sourceShape.centerPosition[1]}\r\n\t\t\t\t\t\t\tx2={this.props.mouse.xPointer}\r\n\t\t\t\t\t\t\ty2={this.props.mouse.yPointer}\r\n\t\t\t\t\t\t\tstyle={{stroke:\"rgb(255,0,0)\", strokeWidth:2}} />\r\n\t\t\t\t\t\t:\r\n\t\t\t\t\t\tnull\r\n\t\t\t\t\t}\r\n\r\n\t\t\t\t\t<Arrows />\r\n\t\t\t\t\t\r\n\t\t\t\t\t{\r\n\t\t\t\t\t\tthis.props.shapes.shapes.map(shape => \r\n\t\t\t\t\t\t\t<DraggableSVG\r\n\t\t\t\t\t\t\t\tisMarked={this.props.shapes.sourceShape && shape.timestamp === this.props.shapes.sourceShape!.timestamp ? true : false}\r\n\t\t\t\t\t\t\t\tcurrentShape={shape}\r\n\t\t\t\t\t\t\t\tkey={shape.timestamp}\r\n\t\t\t\t\t\t\t>\r\n\t\t\t\t\t\t\t\t{React.createElement(shape.shape, {\r\n\t\t\t\t\t\t\t\t\tisMarked: this.props.shapes.sourceShape && shape.timestamp === this.props.shapes.sourceShape!.timestamp ? true : false\r\n\t\t\t\t\t\t\t\t})}\r\n\t\t\t\t\t\t\t</DraggableSVG>\r\n\t\t\t\t\t\t)\r\n\t\t\t\t\t}\r\n\r\n\t\t\t\t\t{/*<DraggableSVG render={(props : IDraggableShape) => (\r\n\t\t\t\t\t\t<MaxPooling {...props} />\r\n\t\t\t\t\t)} />*/}\r\n\t\t\t\t</svg>\r\n\t\t\t</div>\r\n\t\t);\r\n\t}\r\n}\r\n\r\nconst mapStateToProps = (state: AppState) => ({\r\n\tshapes: state.shapes,\r\n\tmouse: state.mouse\r\n});\r\n\r\nexport default connect(\r\n\tmapStateToProps,\r\n\t{ editActiveShape, updateMouseLocation, setShapes }\r\n)(DiagramContainer);","import * as React from 'react';\r\nimport './detailsbar.scss';\r\n//import Button from \"react-bootstrap/Button\";\r\nimport Form from \"react-bootstrap/Form\";\r\nimport Col from \"react-bootstrap/Col\";\r\nimport Row from \"react-bootstrap/Row\";\r\n//import Card from \"react-bootstrap/Card\";\r\nimport Accordion from \"react-bootstrap/Accordion\";\r\nimport { connect } from 'react-redux';\r\nimport { AppState } from '../../store';\r\nimport { ShapeState } from '../../store/shapes/types';\r\nimport { editShapeName, updateShapePositionAction, updateShapeDescription } from '../../store/shapes/actions';\r\n\r\n\r\ninterface IDetailsBarProps {\r\n\tshapes: ShapeState;\r\n\teditShapeName: typeof editShapeName;\r\n\tupdateShapePositionAction: typeof updateShapePositionAction;\r\n\tupdateShapeDescription: typeof updateShapeDescription;\r\n}\r\n\r\ninterface IDetailsBarState {\r\n\r\n}\r\n\r\n\r\nclass DetailsBar extends React.Component<IDetailsBarProps, IDetailsBarState> {\r\n\t\r\n\thandleChangeName = (event: React.ChangeEvent<HTMLInputElement>) => {\r\n\t\tthis.props.editShapeName(this.props.shapes.sourceShape!.timestamp, event.target.value);\r\n\t}\r\n\r\n\thandleChangePosition = (event: React.ChangeEvent<HTMLInputElement>, axisToChange : number) => {\r\n\t\tconst value = +event.target.value;\r\n\r\n\t\t// Change X Axis\r\n\t\tif(axisToChange === 0) {\r\n\t\t\tthis.props.updateShapePositionAction(\r\n\t\t\t\tthis.props.shapes.sourceShape!.timestamp,\r\n\t\t\t\tvalue > 0 ? value : 0,\r\n\t\t\t\tthis.props.shapes.sourceShape!.y\r\n\t\t\t);\r\n\t\t}\r\n\t\t// Change Y Axis\r\n\t\telse {\r\n\t\t\tthis.props.updateShapePositionAction(\r\n\t\t\t\tthis.props.shapes.sourceShape!.timestamp,\r\n\t\t\t\tthis.props.shapes.sourceShape!.x,\r\n\t\t\t\tvalue > 0 ? value : 0\r\n\t\t\t);\r\n\t\t}\r\n\t}\r\n\r\n\thandleDescriptionChange = (event: React.ChangeEvent<HTMLInputElement>) => {\r\n\t\tthis.props.updateShapeDescription(\r\n\t\t\tthis.props.shapes.sourceShape!.timestamp,\r\n\t\t\tevent.target.value\r\n\t\t);\r\n\t}\r\n\r\n\trender() {\r\n\t\tif(this.props.shapes.sourceShape)\r\n\t\t{\r\n\t\t\tconst shape = this.props.shapes.sourceShape;\r\n\r\n\t\t\treturn <aside className=\"component-info\">\r\n\t\t\t\t<h6 style={{textAlign: \"center\"}}>Layer Details</h6>\r\n\t\t\t\t<hr />\r\n\t\t\t\t<Form.Group controlId=\"layerName\">\r\n\t\t\t\t\t<Form.Label>Layer name</Form.Label>\r\n\t\t\t\t\t<Form.Control\r\n\t\t\t\t\t\ttype=\"text\"\r\n\t\t\t\t\t\tplaceholder=\"Layer Name\"\r\n\t\t\t\t\t\tvalue={shape.name}\r\n\t\t\t\t\t\tonChange={this.handleChangeName} />\r\n\t\t\t\t</Form.Group>\r\n\t\t\t\t<Form.Group controlId=\"activation-function\">\r\n\t\t\t\t\t<Form.Label>Activation Function</Form.Label>\r\n\t\t\t\t\t<Form.Control as=\"select\" style={{paddingRight: \"10px\"}}> \r\n\t\t\t\t\t\t<option>None</option>\r\n\t\t\t\t\t\t<option>Sigmoid</option>\r\n\t\t\t\t\t\t<option>ReLU</option>\r\n\t\t\t\t\t\t<option>Tanh</option>\r\n\t\t\t\t\t</Form.Control>\r\n\t\t\t\t</Form.Group>\r\n\t\t\t\t<hr />\r\n\t\t\t\t<Form.Group>\r\n\t\t\t\t\t<Form.Label>Parameters</Form.Label>\r\n\t\t\t\t\t<Row>\r\n\t\t\t\t\t\t<Col>\r\n\t\t\t\t\t\t\t<Form.Label>Kernel</Form.Label>\r\n\t\t\t\t\t\t\t<Form.Control placeholder=\"X\" size=\"sm\" bsPrefix={'form-control fixed-size'} />\r\n\t\t\t\t\t\t</Col>\r\n\t\t\t\t\t\t<Col>\r\n\t\t\t\t\t\t\t<Form.Label>Filters:</Form.Label>\r\n\t\t\t\t\t\t\t<Form.Control placeholder=\"Y\" size=\"sm\" bsPrefix={'form-control fixed-size'} />\r\n\t\t\t\t\t\t</Col>\r\n\t\t\t\t\t</Row>\r\n\t\t\t\t</Form.Group>\r\n\t\t\t\t<hr />\r\n\t\t\t\t<Form.Group>\r\n\t\t\t\t\t<Form.Label>Layer Position</Form.Label>\r\n\t\t\t\t\t<Row>\r\n\t\t\t\t\t\t<Col style={{paddingRight: \"3px\"}}>\r\n\t\t\t\t\t\t\t<Form.Control\r\n\t\t\t\t\t\t\t\ttype=\"number\"\r\n\t\t\t\t\t\t\t\tstep=\"5\"\r\n\t\t\t\t\t\t\t\tplaceholder=\"X\"\r\n\t\t\t\t\t\t\t\tsize=\"sm\"\r\n\t\t\t\t\t\t\t\tbsPrefix={'form-control fixed-size'}\r\n\t\t\t\t\t\t\t\tvalue={shape.x}\r\n\t\t\t\t\t\t\t\tonChange={(e: React.ChangeEvent<HTMLInputElement>) => this.handleChangePosition(e, 0)} />\r\n\t\t\t\t\t\t</Col>\r\n\t\t\t\t\t\t<Col style={{paddingLeft: \"3px\"}}>\r\n\t\t\t\t\t\t\t<Form.Control\r\n\t\t\t\t\t\t\t\ttype=\"number\"\r\n\t\t\t\t\t\t\t\tstep=\"5\"\r\n\t\t\t\t\t\t\t\tplaceholder=\"Y\"\r\n\t\t\t\t\t\t\t\tsize=\"sm\"\r\n\t\t\t\t\t\t\t\tbsPrefix={'form-control fixed-size'}\r\n\t\t\t\t\t\t\t\tvalue={shape.y}\r\n\t\t\t\t\t\t\t\tonChange={(e: React.ChangeEvent<HTMLInputElement>) => this.handleChangePosition(e, 1)} \r\n\t\t\t\t\t\t\t\t />\r\n\t\t\t\t\t\t</Col>\r\n\t\t\t\t\t</Row>\r\n\t\t\t\t</Form.Group>\r\n\t\t\t\t<Form.Group controlId=\"description\">\r\n\t\t\t\t\t{/*\r\n\t\t\t\t\t\tNote: There's a warning when openning the Accordion.Toggle:\r\n\t\t\t\t\t\t\"Warning: findDOMNode is deprecated in StrictMode\"\r\n\r\n\t\t\t\t\t\tit is known issue in react-bootstrap package:\r\n\t\t\t\t\t\thttps://github.com/react-bootstrap/react-bootstrap/issues/5075\r\n\r\n\t\t\t\t\t\tAnd will be fixed.\r\n\t\t\t\t\t*/}\r\n\t\t\t\t\t<Accordion defaultActiveKey={shape.description ? '1' : '0'}>\r\n\t\t\t\t\t\t<Accordion.Toggle as={Form.Label} eventKey=\"1\" id=\"basic-nav-dropdown\">\t\t\t\t\r\n\t\t\t\t\t\t\tDescription <span className=\"dropdown-icon\"></span>\r\n\t\t\t\t\t\t</Accordion.Toggle>\r\n\t\t\t\t\t\t<Accordion.Collapse eventKey=\"1\">\r\n\t\t\t\t\t\t\t<Form.Control\r\n\t\t\t\t\t\t\t\tas=\"textarea\"\r\n\t\t\t\t\t\t\t\trows=\"3\"\r\n\t\t\t\t\t\t\t\tonChange={this.handleDescriptionChange}\r\n\t\t\t\t\t\t\t\tvalue={shape.description ? shape.description : \"\"} />\r\n\t\t\t\t\t\t</Accordion.Collapse>\r\n\t\t\t\t\t</Accordion>\r\n\t\t\t\t</Form.Group>\r\n\t\t\t</aside>;\r\n\t\t}\r\n\t\telse\r\n\t\t\treturn null;\r\n\t}\r\n};\r\n\r\nconst mapStateToProps = (state: AppState) => ({\r\n\tshapes: state.shapes\r\n});\r\n\r\nexport default connect(\r\n\tmapStateToProps,\r\n\t{ editShapeName, updateShapePositionAction, updateShapeDescription }\r\n)(DetailsBar);\r\n","import React from 'react';\n//import logo from './logo.svg';\nimport './App.scss';\n\n// Components\n\nimport ToolBar from \"./components/ToolBar\";\nimport SideBar from \"./components/SideBar\";\nimport DiagramContainer from \"./components/DiagramContainer\";\nimport DetailsBar from \"./components/DetailsBar\";\n\nfunction App() {\n\t\n\treturn (\n\t\t<div className=\"App\">\n\t\t\t<ToolBar />\n\t\t\t<SideBar />\n\t\t\t<DiagramContainer />\n\t\t\t<DetailsBar />\n\t\t</div>\n\t);\n}\n\nexport default App;\n","import {\r\n\tShapeState,\r\n\tADD_SHAPE,\r\n\tDELETE_SHAPE,\r\n\tEDIT_SHAPE_ACTIVATION,\r\n\tUPDATE_SHAPE_LOCATION,\r\n\tShapeActionTypes,\r\n\tADD_ARROW,\r\n\tSET_SHAPES,\r\n\tEDIT_SHAPE_NAME,\r\n\tUPDATE_SHAPE_DESCRIPTION\r\n\t//Arrow,\r\n\t//UPDATE_SHAPE_ARROWS,\r\n} from \"./types\";\r\n\r\nconst initialState: ShapeState = {\r\n\tshapes: [],\r\n\t//arrows: []\r\n};\r\n\r\nexport function shapeReducer(state = initialState, action: ShapeActionTypes) : ShapeState {\r\n\tconst shapes = [...state.shapes];\r\n\r\n\t/*\r\n\t * NOTE: a nice article that explain why we should use curly braces in our case block sections.\r\n\t\t ( it is also supported by the official docs of redux )\r\n\t\t \r\n\t * https://medium.com/@e_himmelfarb/use-curly-braces-with-es6-let-and-const-in-switch-blocks-react-redux-reducers-c0b01b37d748\r\n\t */\r\n\r\n\tswitch(action.type) {\r\n\t\tcase ADD_SHAPE:\r\n\t\t\treturn {\r\n\t\t\t\t...state,\r\n\t\t\t\tshapes: [...state.shapes, action.payload]\r\n\t\t\t};\r\n\r\n\t\tcase SET_SHAPES:\r\n\t\t\treturn {\r\n\t\t\t\t...state,\r\n\t\t\t\tshapes: [...action.payload],\r\n\t\t\t\tsourceShape: undefined\r\n\t\t\t};\r\n\r\n\t\tcase DELETE_SHAPE:\r\n\t\t\treturn {\r\n\t\t\t\t...state,\r\n\t\t\t\tshapes: state.shapes.filter(\r\n\t\t\t\t\tshape => shape.timestamp !== action.meta.timestamp\r\n\t\t\t\t)\r\n\t\t\t};\r\n\r\n\t\tcase EDIT_SHAPE_ACTIVATION:\r\n\t\t\treturn {\r\n\t\t\t\t...state,\r\n\t\t\t\tsourceShape: state.shapes.find(s => s.timestamp === action.meta.timestamp)\r\n\t\t\t}\r\n\r\n\t\tcase EDIT_SHAPE_NAME: {\r\n\t\t\tconst currShape = shapes.find(s => s.timestamp === action.payload.timestamp)!;\r\n\t\t\tcurrShape.name = action.payload.newName;\r\n\t\t\t\r\n\t\t\treturn {\r\n\t\t\t\t...state,\r\n\t\t\t\tshapes\r\n\t\t\t}\r\n\t\t}\r\n\t\t\r\n\t\tcase UPDATE_SHAPE_LOCATION: {\r\n\t\t\tconst currShape = shapes.find(s => s.timestamp === action.payload.timestamp)!;\r\n\t\t\tcurrShape.x = action.payload.x;\r\n\t\t\tcurrShape.y = action.payload.y;\r\n\r\n\t\t\treturn {\r\n\t\t\t\t...state,\r\n\t\t\t\tshapes: shapes\r\n\t\t\t};\r\n\t\t}\r\n\r\n\t\tcase UPDATE_SHAPE_DESCRIPTION: {\r\n\t\t\tconst currShape = shapes.find(s => s.timestamp === action.payload.timestamp)!;\r\n\t\t\tcurrShape.description = action.payload.desc;\r\n\r\n\t\t\treturn {\r\n\t\t\t\t...state,\r\n\t\t\t\tshapes: shapes\r\n\t\t\t};\r\n\t\t}\r\n\r\n\t\tcase ADD_ARROW: {\r\n\r\n\t\t\t// Since we deep copy shapes and we want to push to \"connectedTo\"\r\n\t\t\t// and \"connectedToMe\" the references, we'll find them in shapes object instead of\r\n\t\t\t// point them to action.payload.source/target.\r\n\r\n\t\t\tconst sourceShape = shapes.find(s => s.timestamp === action.payload.source.timestamp)!;\r\n\t\t\tconst targetShape = shapes.find(s => s.timestamp === action.payload.target.timestamp)!;\r\n\t\t\t\r\n\t\t\tsourceShape.connectedTo.push(targetShape);\r\n\t\t\ttargetShape.connectedToMe.push(sourceShape);\r\n\r\n\t\t\t/*const newArrow : Arrow = {\r\n\t\t\t\ttimestamp: action.payload.timestamp,\r\n\t\t\t\tsource: action.payload.source,\r\n\t\t\t\ttarget: action.payload.target\r\n\t\t\t};*/\r\n\r\n\t\t\treturn {\r\n\t\t\t\t...state,\r\n\t\t\t\tshapes: shapes,\r\n\t\t\t\t//arrows: [...state.arrows, newArrow]\r\n\t\t\t};\r\n\t\t}\r\n\t\t\r\n\t\t/*\r\n\t\tcase UPDATE_SHAPE_ARROWS:\r\n\t\t\t// Once we moved a shape, we need to update:\r\n\t\t\t// 1. The arrows connected to this shape\r\n\t\t\t// 2. The arrows that coming out from the shape\r\n\r\n\t\t\tconst currShape = shapes.find(s => s.timestamp === action.meta.timestamp)!;\r\n\r\n\t\t\treturn {\r\n\t\t\t\t...state\r\n\t\t\t}*/\r\n\r\n\t\tdefault:\r\n\t\t\treturn state;\r\n\t}\r\n}","import { MouseState, MouseActionTypes, UPDATE_MOUSE_LOCATION } from \"./types\";\r\n\r\nconst initialState: MouseState = {\r\n\txPointer: 0,\r\n\tyPointer: 0\r\n};\r\n\r\nexport function mouseReducer(state = initialState, action: MouseActionTypes) : MouseState {\r\n\tswitch(action.type) {\r\n\t\tcase UPDATE_MOUSE_LOCATION:\r\n\t\t\treturn {\r\n\t\t\t\txPointer: action.payload.x,\r\n\t\t\t\tyPointer: action.payload.y\r\n\t\t\t}\r\n\r\n\t\tdefault:\r\n\t\t\treturn state;\r\n\t}\r\n}","import { createStore, combineReducers, applyMiddleware } from \"redux\";\r\nimport thunkMiddleware from \"redux-thunk\";\r\nimport { composeWithDevTools } from \"redux-devtools-extension\";\r\n\r\nimport { shapeReducer } from './shapes/reducers';\r\nimport { mouseReducer } from \"./mouse/reducers\";\r\n\r\nconst rootReducer = combineReducers({\r\n\tshapes: shapeReducer,\r\n\tmouse: mouseReducer\r\n});\r\n\r\nexport type AppState = ReturnType<typeof rootReducer>;\r\n\r\nexport default function configureStore() {\r\n\tconst middlewares = [thunkMiddleware];\r\n\tconst middleWareEnhancer = applyMiddleware(...middlewares);\r\n\r\n\tconst store = createStore(\r\n\t\trootReducer,\r\n\t\tcomposeWithDevTools(middleWareEnhancer)\r\n\t);\r\n\r\n\treturn store;\r\n}\r\n  ","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport { Provider } from \"react-redux\";\nimport * as serviceWorker from './serviceWorker';\n\nimport './index.css';\n\nimport App from './App';\nimport configureStore from './store';\n\nconst store = configureStore();\n\nReactDOM.render(\n\t<Provider store={store}>\n\t\t{/*<React.StrictMode>\n\t\t\t<App />\n\t\t</React.StrictMode>*/}\n\t\t<App />\n\t</Provider>,\n\tdocument.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}